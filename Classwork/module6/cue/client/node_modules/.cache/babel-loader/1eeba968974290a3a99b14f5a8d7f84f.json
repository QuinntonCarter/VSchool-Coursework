{"ast":null,"code":"var _jsxFileName = \"/Users/quinntoncarter/Documents/VSchool/Classwork/module6/cue/client/src/components/context/userProvider.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UserContext = /*#__PURE__*/React.createContext();\nconst userAxios = axios.create();\nuserAxios.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  config.headers.Authorization = `Bearer ${token}`;\n  return config;\n});\nexport default function UserProvider(props) {\n  _s();\n\n  const initState = {\n    user: JSON.parse(localStorage.getItem('user')) || null,\n    token: localStorage.getItem('token') || '',\n    lists: [],\n    recentMood: [],\n    friendPosts: [],\n    errMsg: ''\n  };\n  const initSpotifyState = {\n    spotifyUser: JSON.parse(localStorage.getItem('spotifyUser')) || null,\n    spotifyToken: localStorage.getItem('spotify_access_token') || '',\n    errMsg: ''\n  };\n  const [spotifyUserState, setSpotifyUserState] = useState(initSpotifyState);\n  const [userState, setUserState] = useState(initState); // for auth\n\n  function signup(credentials) {\n    axios.post('/auth/signup', credentials).then(res => {\n      const {\n        user,\n        token\n      } = res.data;\n      localStorage.setItem('token', token);\n      localStorage.setItem('user', JSON.stringify(user));\n      setUserState(prevUserState => ({ ...prevUserState,\n        user,\n        token\n      }));\n    }).catch(err => handleAuthError(err));\n  }\n\n  ;\n\n  function login(credentials) {\n    const parsedInputs = {\n      username: credentials.username.split(' ').join('_'),\n      password: credentials.password\n    };\n    axios.post('/auth/login', parsedInputs).then(res => {\n      const {\n        user,\n        token\n      } = res.data;\n      localStorage.setItem('token', token);\n      localStorage.setItem('user', JSON.stringify(user));\n      setUserState(prevUserState => ({ ...prevUserState,\n        user,\n        token\n      }));\n    }).catch(err => handleAuthError(err));\n  }\n\n  ;\n\n  function logout() {\n    setUserState({\n      user: {},\n      token: ''\n    });\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n  }\n\n  ; //  err\n\n  function handleAuthError(err) {\n    setUserState(prevState => ({ ...prevState,\n      errMsg: JSON.stringify(err.message)\n    }));\n  }\n\n  ;\n\n  function resetAuthError() {\n    setUserState(prevState => ({ ...prevState,\n      errMsg: ''\n    }));\n  }\n\n  ;\n\n  const shareItem = async (list, timeframe) => {\n    if (list.type === 'playlist') {\n      userAxios.post(`/app/lists`, list, {\n        params: {\n          time: timeframe\n        }\n      }).then(res => setUserState(prevState => ({ ...prevState,\n        lists: [res.data]\n      }))).catch(err => console.log(err));\n    } else {\n      userAxios.post(`/app/moods/${timeframe}`, list).then(res => setUserState(prevState => ({ ...prevState,\n        recentMood: [res.data]\n      }))).catch(err => console.log(err));\n    }\n  };\n\n  const updateFollowStatus = (id, type) => {\n    userAxios.post(`/app/users/friends`, {\n      params: {\n        type: type,\n        id: id\n      }\n    }).then(res => setUserState(prevState => ({ ...prevState,\n      user: res.data\n    }))).catch(err => console.log(err));\n  }; // CRUD **\n  // get all friends' posts in DB **\n\n\n  const getStatus = async type => {\n    if (type === 'user') {\n      const {\n        data\n      } = await userAxios.get(`/app/moods`, {\n        params: {\n          type: type\n        }\n      });\n      return data;\n    } else if (type === 'friends') {\n      const {\n        data\n      } = await userAxios.get('/app/moods', {\n        params: {\n          type: type\n        }\n      });\n      return data;\n    }\n  }; // get recent playlist\n  // const getPosts = async (type) => {\n  //     if(type === 'user'){\n  //     const { data } = await userAxios.get(`/app/users`, {\n  //         params: {\n  //             type: 'user',\n  //         }\n  //     })\n  //     .then(() => {\n  //         setUserState(prevState => ({\n  //             ...prevState,\n  //             recentMood: data.mood,\n  //             lists: [data.lists]\n  //         }))\n  //     })\n  //     .catch(err => console.log(err.response.data.errMsg))\n  // } else if(type=== 'friends'){\n  //     const { data } = await userAxios.get(`/app/users`, {\n  //         params: {\n  //             type: 'friends'\n  //         }\n  //     })\n  // }};\n\n\n  const deleteUserAccount = () => {\n    userAxios.delete(`/app/users/removeAcc`).then(res => console.log(res.data)).catch(err => console.log(err)).finally(logout());\n  };\n\n  useEffect(() => {\n    getStatus('user').then(res => setUserState(prevState => ({ ...prevState,\n      recentMood: res\n    })));\n    getStatus('friends').then(res => setUserState(prevState => ({ ...prevState,\n      friendPosts: res\n    })));\n  });\n  useEffect(() => {\n    console.log(userState);\n  });\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: { ...userState,\n      spotifyUserState,\n      setSpotifyUserState,\n      userState,\n      signup,\n      login,\n      logout,\n      userAxios,\n      deleteUserAccount,\n      shareItem,\n      updateFollowStatus,\n      getStatus,\n      resetAuthError\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 191,\n    columnNumber: 9\n  }, this);\n}\n\n_s(UserProvider, \"nJmfAhGNO8TNY1txHkG3hGwd9kE=\");\n\n_c = UserProvider;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserProvider\");","map":{"version":3,"sources":["/Users/quinntoncarter/Documents/VSchool/Classwork/module6/cue/client/src/components/context/userProvider.js"],"names":["React","useState","useEffect","axios","UserContext","createContext","userAxios","create","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","UserProvider","props","initState","user","JSON","parse","lists","recentMood","friendPosts","errMsg","initSpotifyState","spotifyUser","spotifyToken","spotifyUserState","setSpotifyUserState","userState","setUserState","signup","credentials","post","then","res","data","setItem","stringify","prevUserState","catch","err","handleAuthError","login","parsedInputs","username","split","join","password","logout","removeItem","prevState","message","resetAuthError","shareItem","list","timeframe","type","params","time","console","log","updateFollowStatus","id","getStatus","get","deleteUserAccount","delete","finally","children"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nexport const UserContext = React.createContext();\n\nconst userAxios = axios.create();\nuserAxios.interceptors.request.use(config => {\n    const token = localStorage.getItem('token')\n    config.headers.Authorization = `Bearer ${token}`\n    return config\n});\n\nexport default function UserProvider(props){\n    const initState = {\n        user: JSON.parse(localStorage.getItem('user')) || null,\n        token: localStorage.getItem('token') || '',\n        lists: [],\n        recentMood: [],\n        friendPosts: [],\n        errMsg: ''\n    };\n\n    const initSpotifyState = {\n        spotifyUser: JSON.parse(localStorage.getItem('spotifyUser')) || null,\n        spotifyToken: localStorage.getItem('spotify_access_token') || '',\n        errMsg: ''\n    };\n\n    const [ spotifyUserState, setSpotifyUserState ] = useState(initSpotifyState);\n    const [ userState, setUserState ] = useState(initState);\n\n// for auth\n    function signup(credentials){\n        axios.post('/auth/signup', credentials)\n        .then(res => {\n            const { user, token } = res.data\n            localStorage.setItem('token', token)\n            localStorage.setItem('user', JSON.stringify(user))\n            setUserState(prevUserState => ({\n                ...prevUserState,\n                user,\n                token\n            }))\n        })\n        .catch(err => handleAuthError(err))\n    };\n\n    function login(credentials){\n        const parsedInputs = {\n            username: credentials.username.split(' ').join('_'),\n            password: credentials.password\n        }\n        axios.post('/auth/login', parsedInputs)\n        .then(res => {\n            const { user, token } = res.data\n            localStorage.setItem('token', token)\n            localStorage.setItem('user', JSON.stringify(user))\n            setUserState(prevUserState => ({\n                ...prevUserState,\n                user,\n                token\n            }))\n        })\n        .catch(err => handleAuthError(err))\n    };\n\n    function logout(){\n        setUserState({\n            user: {},\n            token: '',\n        });\n        localStorage.removeItem('token')\n        localStorage.removeItem('user')\n    };\n\n//  err\n    function handleAuthError(err){\n        setUserState(prevState => ({\n            ...prevState,\n            errMsg: JSON.stringify(err.message)\n        }))\n    };\n\n    function resetAuthError(){\n        setUserState(prevState => ({\n            ...prevState,\n            errMsg: ''\n        }))\n    };\n\n    const shareItem = async (list, timeframe) => {\n        if(list.type === 'playlist'){\n            userAxios.post(`/app/lists`, list, {\n                params: {\n                    time: timeframe\n                }\n            })\n            .then((res) => setUserState(prevState => ({...prevState, lists: [res.data]})))\n            .catch(err => console.log(err))\n        } else {\n            userAxios.post(`/app/moods/${timeframe}`, list)\n            .then((res) => setUserState(prevState => ({...prevState, recentMood: [res.data]})))\n            .catch(err => console.log(err))\n        }\n    };\n\n    const updateFollowStatus = (id, type) => {\n        userAxios.post(`/app/users/friends`, {\n            params: {\n                type: type,\n                id: id\n            }\n        })\n        .then(res => \n            setUserState(prevState => ({\n                ...prevState,\n                user: res.data\n            }))\n            )\n        .catch(err => console.log(err))\n    };\n\n// CRUD **\n// get all friends' posts in DB **\n    const getStatus = async (type) => {\n        if(type === 'user'){\n        const { data } = await userAxios.get(`/app/moods`, {\n            params: {\n                type: type\n            }\n        })\n        return data\n        } else if(type=== 'friends'){\n        const { data } = await userAxios.get('/app/moods', {\n            params: {\n                type: type\n            }\n        })\n        return data\n    }};\n\n// get recent playlist\n    // const getPosts = async (type) => {\n    //     if(type === 'user'){\n    //     const { data } = await userAxios.get(`/app/users`, {\n    //         params: {\n    //             type: 'user',\n    //         }\n    //     })\n    //     .then(() => {\n    //         setUserState(prevState => ({\n    //             ...prevState,\n    //             recentMood: data.mood,\n    //             lists: [data.lists]\n    //         }))\n    //     })\n    //     .catch(err => console.log(err.response.data.errMsg))\n    // } else if(type=== 'friends'){\n    //     const { data } = await userAxios.get(`/app/users`, {\n    //         params: {\n    //             type: 'friends'\n    //         }\n    //     })\n    // }};\n\n    const deleteUserAccount = () => {\n        userAxios.delete(`/app/users/removeAcc`)\n        .then(res => console.log(res.data))\n        .catch(err => console.log(err))\n        .finally(logout())\n    }\n\n    useEffect(() => {\n        getStatus('user')\n        .then(res => setUserState(prevState => ({\n                ...prevState,\n                recentMood: res}))\n        )\n        getStatus('friends')\n        .then(res => setUserState(prevState => ({\n                ...prevState,\n                friendPosts: res}))\n        )\n    })\n\n    useEffect(() => {\n        console.log(userState)\n    },)\n\n    return(\n        <UserContext.Provider\n        value={{\n            ...userState,\n            spotifyUserState,\n            setSpotifyUserState,\n            userState,\n            signup,\n            login,\n            logout,\n            userAxios,\n            deleteUserAccount,\n            shareItem,\n            updateFollowStatus,\n            getStatus,\n            resetAuthError\n        }}>\n            {props.children}\n        </UserContext.Provider>\n    )\n};"]},"metadata":{},"sourceType":"module"}