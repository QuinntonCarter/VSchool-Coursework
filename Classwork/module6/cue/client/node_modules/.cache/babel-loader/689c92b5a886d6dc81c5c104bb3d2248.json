{"ast":null,"code":"var _jsxFileName = \"/Users/quinntoncarter/Documents/VSchool/Classwork/module6/cue/client/src/components/context/appContext.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport axios from 'axios';\nimport { spotifyUser } from '../spotify.js'; // refactor for use with spotify API (not for user information)\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AppContext = /*#__PURE__*/React.createContext();\n\nfunction AppContextProvider(props) {\n  _s();\n\n  // will be sent to search.js and used in view\n  const [searchQuery, setSearchQuery] = useState([]);\n  const [songDetails, setSongDetails] = useState([]);\n\n  function searchByArtist(input) {\n    var querySplit = query.split(' ').join('%20');\n    var artistSplit = artist.split(' ').join('%20');\n    spotifyUser.get(`/search?q=artist:${artistSplit}&type=${type}&name=${querySplit}`).then(res => console.log(res.data)).catch(err => console.log(err));\n  } // // could be used to analyse songs\n  // function getDetails(id){\n  //     axios.get(`https://api.spotify.com/v1/`)\n  //     .then(res => setSongDetails(res.data))\n  //     .catch(err => console.log(err))\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: {\n      searchByArtist,\n      searchQuery,\n      setSearchQuery,\n      songDetails\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AppContextProvider, \"gOm+qQfxOkv4qfQJJQm30IlPZYI=\");\n\n_c = AppContextProvider;\nexport { AppContextProvider, AppContext };\n\nvar _c;\n\n$RefreshReg$(_c, \"AppContextProvider\");","map":{"version":3,"sources":["/Users/quinntoncarter/Documents/VSchool/Classwork/module6/cue/client/src/components/context/appContext.js"],"names":["React","useState","useEffect","useContext","axios","spotifyUser","AppContext","createContext","AppContextProvider","props","searchQuery","setSearchQuery","songDetails","setSongDetails","searchByArtist","input","querySplit","query","split","join","artistSplit","artist","get","type","then","res","console","log","data","catch","err","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,eAA5B,C,CAEA;;;AACA,MAAMC,UAAU,gBAAGN,KAAK,CAACO,aAAN,EAAnB;;AAEA,SAASC,kBAAT,CAA4BC,KAA5B,EAAkC;AAAA;;AAC9B;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACW,WAAD,EAAcC,cAAd,IAAgCZ,QAAQ,CAAC,EAAD,CAA9C;;AAGA,WAASa,cAAT,CAAwBC,KAAxB,EAA8B;AAC1B,QAAIC,UAAU,GAAGC,KAAK,CAACC,KAAN,CAAY,GAAZ,EAAiBC,IAAjB,CAAsB,KAAtB,CAAjB;AACA,QAAIC,WAAW,GAAGC,MAAM,CAACH,KAAP,CAAa,GAAb,EAAkBC,IAAlB,CAAuB,KAAvB,CAAlB;AACAd,IAAAA,WAAW,CAACiB,GAAZ,CAAiB,oBAAmBF,WAAY,SAAQG,IAAK,SAAQP,UAAW,EAAhF,EACCQ,IADD,CACMC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAhB,CADb,EAECC,KAFD,CAEOC,GAAG,IAAIJ,OAAO,CAACC,GAAR,CAAYG,GAAZ,CAFd;AAGH,GAZ6B,CAc9B;AACA;AACA;AACA;AACA;AACA;;;AAEA,sBACI,QAAC,UAAD,CAAY,QAAZ;AACA,IAAA,KAAK,EAAE;AACHhB,MAAAA,cADG;AAEHJ,MAAAA,WAFG;AAGHC,MAAAA,cAHG;AAIHC,MAAAA;AAJG,KADP;AAAA,cAOKH,KAAK,CAACsB;AAPX;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH;;GAhCQvB,kB;;KAAAA,kB;AAkCT,SAASA,kBAAT,EAA6BF,UAA7B","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport axios from 'axios';\nimport { spotifyUser } from '../spotify.js';\n\n// refactor for use with spotify API (not for user information)\nconst AppContext = React.createContext();\n\nfunction AppContextProvider(props){\n    // will be sent to search.js and used in view\n    const [searchQuery, setSearchQuery] = useState([]);\n    const [songDetails, setSongDetails] = useState([]);\n\n\n    function searchByArtist(input){\n        var querySplit = query.split(' ').join('%20');\n        var artistSplit = artist.split(' ').join('%20');\n        spotifyUser.get(`/search?q=artist:${artistSplit}&type=${type}&name=${querySplit}`)\n        .then(res => console.log(res.data))\n        .catch(err => console.log(err))\n    }\n\n    // // could be used to analyse songs\n    // function getDetails(id){\n    //     axios.get(`https://api.spotify.com/v1/`)\n    //     .then(res => setSongDetails(res.data))\n    //     .catch(err => console.log(err))\n    // }\n\n    return(\n        <AppContext.Provider\n        value={{\n            searchByArtist,\n            searchQuery,\n            setSearchQuery,\n            songDetails\n        }}>\n            {props.children}\n        </AppContext.Provider>\n    )\n}\n\nexport { AppContextProvider, AppContext}"]},"metadata":{},"sourceType":"module"}