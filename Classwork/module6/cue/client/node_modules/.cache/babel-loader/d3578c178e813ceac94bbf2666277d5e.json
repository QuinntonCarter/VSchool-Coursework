{"ast":null,"code":"var _jsxFileName = \"/Users/quinntoncarter/Documents/VSchool/Classwork/module6/cue/client/src/views/lists.js\",\n    _s = $RefreshSig$();\n\nimport { useContext, useEffect } from 'react';\nimport { UserContext } from '../components/context/userProvider.js';\nimport { PostedMood } from '../components/postedMood.js'; // friends' lists\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Lists() {\n  _s();\n\n  const {\n    getStatus,\n    userState: {\n      friendPosts\n    },\n    setUserState\n  } = useContext(UserContext);\n  useEffect(() => {\n    let type = 'friends';\n    getStatus(type);\n    getStatus(type).then(res => setUserState(prevState => ({ ...prevState,\n      friendPosts: res\n    })))(userState);\n  }, []);\n  const mappedFriendsMoods = friendPosts.map(post => /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"text-sm text-indigo-500\",\n      children: [\" \", post.userString, \"'s mood\", post.timeline === 'short_term' && ` these past 30 days`, post.timeline === 'medium_term' && ` these past 6 months`, post.timeline === 'long_term' && ` the past year`]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(PostedMood, {\n      id: post._id,\n      items: post.items\n    }, post._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-main\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        color: 'gray'\n      },\n      children: \" Mood lists posted by friends \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), mappedFriendsMoods]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Lists, \"7CWmm3QqWvemOHi86leBtqN/35o=\");\n\n_c = Lists;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"Lists\");","map":{"version":3,"sources":["/Users/quinntoncarter/Documents/VSchool/Classwork/module6/cue/client/src/views/lists.js"],"names":["useContext","useEffect","UserContext","PostedMood","Lists","getStatus","userState","friendPosts","setUserState","type","then","res","prevState","mappedFriendsMoods","map","post","userString","timeline","_id","items","color"],"mappings":";;;AAAA,SAASA,UAAT,EAAqBC,SAArB,QAAsC,OAAtC;AACA,SAASC,WAAT,QAA4B,uCAA5B;AACA,SAASC,UAAT,QAA2B,6BAA3B,C,CAEA;;;;AACA,eAAe,SAASC,KAAT,GAAgB;AAAA;;AAC3B,QAAM;AACFC,IAAAA,SADE;AAEFC,IAAAA,SAAS,EAAE;AACPC,MAAAA;AADO,KAFT;AAKFC,IAAAA;AALE,MAMFR,UAAU,CAACE,WAAD,CANd;AAQAD,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIQ,IAAI,GAAG,SAAX;AACAJ,IAAAA,SAAS,CAACI,IAAD,CAAT;AACAJ,IAAAA,SAAS,CAACI,IAAD,CAAT,CACCC,IADD,CACMC,GAAG,IAAIH,YAAY,CAACI,SAAS,KAAK,EAChC,GAAGA,SAD6B;AAEhCL,MAAAA,WAAW,EAAEI;AAFmB,KAAL,CAAV,CADzB,EAMCL,SAND;AAOH,GAVQ,EAUP,EAVO,CAAT;AAYA,QAAMO,kBAAkB,GAAGN,WAAW,CAACO,GAAZ,CAAgBC,IAAI,iBAC3C;AAAA,4BACI;AAAI,MAAA,SAAS,EAAC,yBAAd;AAAA,sBAA0CA,IAAI,CAACC,UAA/C,aACKD,IAAI,CAACE,QAAL,KAAkB,YAAlB,IAAmC,qBADxC,EAEKF,IAAI,CAACE,QAAL,KAAkB,aAAlB,IAAoC,sBAFzC,EAGKF,IAAI,CAACE,QAAL,KAAkB,WAAlB,IAAkC,gBAHvC;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAMI,QAAC,UAAD;AAEI,MAAA,EAAE,EAAEF,IAAI,CAACG,GAFb;AAGI,MAAA,KAAK,EAAEH,IAAI,CAACI;AAHhB,OACSJ,IAAI,CAACG,GADd;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA,kBADuB,CAA3B;AAeA,sBACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,4BACI;AAAI,MAAA,KAAK,EAAE;AAACE,QAAAA,KAAK,EAAE;AAAR,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAESP,kBAFT;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH;;GA1CuBT,K;;KAAAA,K;AA0CvB","sourcesContent":["import { useContext, useEffect } from 'react';\nimport { UserContext } from '../components/context/userProvider.js';\nimport { PostedMood } from '../components/postedMood.js';\n\n// friends' lists\nexport default function Lists(){\n    const {\n        getStatus,\n        userState: {\n            friendPosts\n        },\n        setUserState\n    } = useContext(UserContext);\n\n    useEffect(() => {\n        let type = 'friends'\n        getStatus(type)\n        getStatus(type)\n        .then(res => setUserState(prevState => ({\n                ...prevState,\n                friendPosts: res\n            }))\n        )\n        (userState)\n    },[]);\n    \n    const mappedFriendsMoods = friendPosts.map(post => \n        <>\n            <h3 className='text-sm text-indigo-500'> {post.userString}'s mood\n                {post.timeline === 'short_term' && ` these past 30 days`}\n                {post.timeline === 'medium_term' && ` these past 6 months`}\n                {post.timeline === 'long_term' && ` the past year`} \n            </h3>\n            <PostedMood\n                key={post._id}\n                id={post._id}\n                items={post.items}\n            />\n        </>\n    );\n\n    return(\n        <div className='container-main'>\n            <h1 style={{color: 'gray'}}> Mood lists posted by friends </h1>\n                {mappedFriendsMoods}\n        </div>\n    )\n};"]},"metadata":{},"sourceType":"module"}