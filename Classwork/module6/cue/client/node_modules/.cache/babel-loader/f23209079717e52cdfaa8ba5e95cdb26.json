{"ast":null,"code":"var _jsxFileName = \"/Users/quinntoncarter/Documents/VSchool/Classwork/module6/cue/client/src/views/profile.js\",\n    _s = $RefreshSig$();\n\nimport { useContext, useState, useEffect } from 'react';\nimport { Switch, Route, Link } from 'react-router-dom'; // also doubles as profile view, inlcudes weekly list component\n\nimport { getCurrentUserTop } from '../components/spotify.js'; // includes user information from userContext\n\nimport { UserContext } from '../components/context/userProvider.js';\nimport { RecentTracks } from '../components/recentTracks.js';\nimport { RecentArtists } from '../components/recentArtists.js';\nimport access from '../components/spotify.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Profile() {\n  _s();\n\n  const {\n    user,\n    spotifyUser\n  } = useContext(UserContext); // const {\n  // } = useContext(AppContext)\n\n  const [view, setView] = useState('artists');\n  const [weeklyArtist, setWeeklyArtist] = useState({});\n  const [weeklyTracks, setWeeklyTracks] = useState({}); // /pull from mongodb, saved lists\n  // const mappedLists = 'first option ternary; if lists? first here if not no lists yet'\n\n  useEffect(() => {\n    const fetchUserRecents = () => {\n      const {\n        dataArtist\n      } = getCurrentUserTop('artists', 3, 'short_term');\n      const {\n        dataTracks\n      } = getCurrentUserTop('tracks', 3, 'short_term');\n      setWeeklyArtist(dataArtist);\n      setWeeklyTracks(dataTracks);\n    };\n\n    fetchUserRecents();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"listprofileview-Container\",\n    children: [console.log(spotifyUser), console.log(weeklyArtist), console.log(weeklyTracks), /*#__PURE__*/_jsxDEV(\"i\", {\n      style: {\n        fontSize: '27px'\n      },\n      className: \"fab fa-spotify\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\" Spotify: \", spotifyUser ? spotifyUser.display_name : 'error', \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 72\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\" Username: @\", user.username, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: spotifyUser.images[0].url,\n      alt: \"spotify-user-img\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          color: 'gray'\n        },\n        children: \" past week top listens (toggle by artist or track) \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), \"click to view recent top\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: `/recent_mood_artists`,\n        children: [\"artists\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: \"viewType\",\n          value: \"artists\",\n          onClick: e => setView(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: `/recent_mood_tracks`,\n        children: [\"tracks\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: \"viewType\",\n          value: \"tracks\",\n          onClick: e => setView(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: `/recent_mood_artists`,\n          children: RecentArtists\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: `/recent_mood_tracks`,\n          children: RecentTracks\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Profile, \"RNMzQXnKGR7TRfFhe8os91ym8OY=\");\n\n_c = Profile;\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["/Users/quinntoncarter/Documents/VSchool/Classwork/module6/cue/client/src/views/profile.js"],"names":["useContext","useState","useEffect","Switch","Route","Link","getCurrentUserTop","UserContext","RecentTracks","RecentArtists","access","Profile","user","spotifyUser","view","setView","weeklyArtist","setWeeklyArtist","weeklyTracks","setWeeklyTracks","fetchUserRecents","dataArtist","dataTracks","console","log","fontSize","display_name","username","images","url","color","e","target","value"],"mappings":"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","sourcesContent":["import { useContext, useState, useEffect } from 'react';\nimport { Switch, Route, Link } from 'react-router-dom';\n// also doubles as profile view, inlcudes weekly list component\nimport { getCurrentUserTop } from '../components/spotify.js';\n// includes user information from userContext\nimport { UserContext } from '../components/context/userProvider.js';\nimport { RecentTracks } from '../components/recentTracks.js';\nimport { RecentArtists } from '../components/recentArtists.js';\nimport access from '../components/spotify.js';\n\nexport default function Profile(){\n    const {\n        user,\n        spotifyUser\n    } = useContext(UserContext)\n    // const {\n        \n    // } = useContext(AppContext)\n\n        const [ view, setView ] = useState('artists')\n        const [ weeklyArtist, setWeeklyArtist ] = useState({})\n        const [ weeklyTracks, setWeeklyTracks ] = useState({})\n    // /pull from mongodb, saved lists\n    // const mappedLists = 'first option ternary; if lists? first here if not no lists yet'\n\n    useEffect(() => {\n        const fetchUserRecents = () => {\n            const { dataArtist } = getCurrentUserTop('artists', 3, 'short_term')\n            const { dataTracks } = getCurrentUserTop('tracks', 3, 'short_term')\n            setWeeklyArtist(dataArtist)\n            setWeeklyTracks(dataTracks)\n        }\n        fetchUserRecents();\n    },[])\n\n    return(\n        <div className=\"listprofileview-Container\">\n            {console.log(spotifyUser)}\n            {console.log(weeklyArtist)}\n            {console.log(weeklyTracks)}\n            <i style={{fontSize: '27px'}} className=\"fab fa-spotify\"/> <h3> Spotify: { spotifyUser ? spotifyUser.display_name : 'error'} </h3>\n            <h3> Username: @{user.username} </h3>\n            <img src={spotifyUser.images[0].url} alt='spotify-user-img' />\n            <div>\n                <h1 style={{color: 'gray'}}> past week top listens (toggle by artist or track) </h1>\n                click to view recent top\n                <br/>\n                <Link to={`/recent_mood_artists`}> \n                artists\n                    <input type='radio' name='viewType' value='artists' onClick={e => setView(e.target.value)} />\n                </Link>\n                <Link to={`/recent_mood_tracks`}> \n                tracks\n                    <input type='radio' name='viewType'  value='tracks' onClick={e => setView(e.target.value)} />\n                </Link> \n                <Switch>\n                    <Route path={`/recent_mood_artists`}>\n                        {RecentArtists}\n                    </Route>\n                    <Route path={`/recent_mood_tracks`}>\n                        {RecentTracks}\n                    </Route>\n                </Switch>\n            </div>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}