{"ast":null,"code":"var _jsxFileName = \"/Users/quinntoncarter/Documents/VSchool/Classwork/module6/cue/client/src/components/forms/searchBar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from 'react';\nimport { AppContext } from '../context/appContext.js';\nimport SearchView from '../../views/search.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SearchBar() {\n  _s();\n\n  const [inputs, setInputs] = useState({\n    artist: '',\n    name: ''\n  });\n  const {\n    searchByArtist\n  } = useContext(AppContext);\n\n  function handleChange(e) {\n    const {\n      name,\n      value\n    } = e.target;\n    setInputs(prevInputs => ({ ...prevInputs,\n      [name]: value\n    }));\n  }\n\n  ;\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    searchByArtist(inputs);\n    setInputs({\n      artist: ''\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"searchBarWrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"artist\",\n        value: inputs.artist,\n        onChange: handleChange,\n        placeholder: \"artist name\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          cursor: 'pointer'\n        },\n        className: \"searchBtn\",\n        children: \" search \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SearchView, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n} // should include search input and functions\n// and search functions will need utilize app context provider\n\n_s(SearchBar, \"uAq7bJPPGVlEOSCqpwf5DXyIL44=\");\n\n_c = SearchBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"sources":["/Users/quinntoncarter/Documents/VSchool/Classwork/module6/cue/client/src/components/forms/searchBar.js"],"names":["React","useState","useContext","AppContext","SearchView","SearchBar","inputs","setInputs","artist","name","searchByArtist","handleChange","e","value","target","prevInputs","handleSubmit","preventDefault","cursor"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AAEA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,UAAP,MAAuB,uBAAvB;;AAEA,eAAe,SAASC,SAAT,GAAoB;AAAA;;AAC/B,QAAM,CAAEC,MAAF,EAAUC,SAAV,IAAwBN,QAAQ,CAAC;AAAEO,IAAAA,MAAM,EAAE,EAAV;AAAcC,IAAAA,IAAI,EAAE;AAApB,GAAD,CAAtC;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAqBR,UAAU,CAACC,UAAD,CAArC;;AAEA,WAASQ,YAAT,CAAsBC,CAAtB,EAAwB;AACpB,UAAM;AAAEH,MAAAA,IAAF;AAAQI,MAAAA;AAAR,QAAkBD,CAAC,CAACE,MAA1B;AACAP,IAAAA,SAAS,CAACQ,UAAU,KAAK,EACrB,GAAGA,UADkB;AAErB,OAACN,IAAD,GAAQI;AAFa,KAAL,CAAX,CAAT;AAIH;;AAAA;;AAED,WAASG,YAAT,CAAsBJ,CAAtB,EAAwB;AACpBA,IAAAA,CAAC,CAACK,cAAF;AACAP,IAAAA,cAAc,CAACJ,MAAD,CAAd;AACAC,IAAAA,SAAS,CAAC;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAAD,CAAT;AACH;;AAED,sBACI;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA,4BACI;AAAA,8BAGQ;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,IAAI,EAAC,QAAxB;AAAiC,QAAA,KAAK,EAAEF,MAAM,CAACE,MAA/C;AAAuD,QAAA,QAAQ,EAAEG,YAAjE;AAA+E,QAAA,WAAW,EAAC,aAA3F;AAAyG,QAAA,QAAQ;AAAjH;AAAA;AAAA;AAAA;AAAA,cAHR,eAMI;AAAQ,QAAA,KAAK,EAAE;AAACO,UAAAA,MAAM,EAAE;AAAT,SAAf;AAAoC,QAAA,SAAS,EAAC,WAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eASI,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,YATJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH,C,CACD;AACA;;GAjCwBb,S;;KAAAA,S","sourcesContent":["import React, { useState, useContext } from 'react';\n\nimport { AppContext } from '../context/appContext.js';\nimport SearchView from '../../views/search.js';\n\nexport default function SearchBar(){\n    const [ inputs, setInputs ] = useState({ artist: '', name: '' });\n    const { searchByArtist } = useContext(AppContext);\n\n    function handleChange(e){\n        const { name, value } = e.target\n        setInputs(prevInputs => ({\n            ...prevInputs,\n            [name]: value\n        }))\n    };\n\n    function handleSubmit(e){\n        e.preventDefault()\n        searchByArtist(inputs)\n        setInputs({ artist: '' })\n    }\n\n    return(\n        <div className='searchBarWrapper'>\n            <form>\n                {/* <input type='radio' value='type'/>\n                <input type='radio' value='type'/> */}\n                    <input type='text' name='artist' value={inputs.artist} onChange={handleChange} placeholder='artist name' required/>\n                    {/* <input type='text' name='song' value={inputs.song} onChange={handleChange} placeholder='track name' required/> */}\n                \n                <button style={{cursor: 'pointer'}} className='searchBtn'> search </button>\n            </form>\n            <SearchView/>\n        </div>\n    )\n}\n// should include search input and functions\n// and search functions will need utilize app context provider"]},"metadata":{},"sourceType":"module"}