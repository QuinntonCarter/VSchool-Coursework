{"ast":null,"code":"var _jsxFileName = \"/Users/quinntoncarter/Documents/VSchool/Classwork/module6/cue/client/src/components/forms/searchBar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext, useEffect } from 'react';\nimport { AppContext } from '../context/appContext.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const SearchBar = () => {\n  _s();\n\n  const [type, setType] = useState('friend');\n  const [toggleMore, setToggleMore] = useState(false);\n  const [moodLevel, setMoodLevel] = useState(0);\n  const [inputs, setInputs] = useState('');\n  const {\n    search\n  } = useContext(AppContext);\n  let input;\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    search(inputs, type);\n    setInputs('');\n  } // useEffect(() => {\n  //     if(moodLevel >= 3){\n  //         setMoodLevel(3)\n  //     }\n  // },[moodLevel])\n\n\n  useEffect(() => {\n    const select = document.createElement('select');\n    const option = document.createElement('option');\n    option.in;\n    const option2 = document.createElement('option');\n    const option3 = document.createElement('option');\n    const option4 = document.createElement('option');\n    const newOptionSelect = select.append(option);\n\n    for (let i = 0; i < moodLevel; i++) {\n      return input.append(newOptionSelect);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"grid\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"text-left grid grid-cols-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"col-span-2 p-1 m-1 mb-2 text-navy-900 rounded\",\n        onChange: e => setType(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          children: \" friend \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \" mood \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), type === 'mood' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"col-span-2 p-1 m-1 text-indigo-600 bg-indigo-300 rounded\",\n          onChange: e => setType(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            children: \" - select - \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            children: \" placeholder \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            children: \" placeholder \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            children: \" placeholder \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            children: \" placeholder \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setMoodLevel(prevState => prevState !== 3 ? prevState + 1 : prevState),\n          children: \" deepen mood \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), console.log(moodLevel), input]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"col-span-4 text-indigo-900 p-1 w-full rounded\",\n        type: \"text\",\n        value: inputs,\n        onChange: e => setInputs(e.target.value),\n        placeholder: `${type === 'friend' ? `What's their username` : `What's the ${type}`}?`,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"bg-cyan-200 text-cyan-800 rounded p-1 m-2\",\n      children: [\" find \", type, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SearchBar, \"qDrybk3hUHKrBQtDLKzR4eddqdc=\");\n\n_c = SearchBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"sources":["/Users/quinntoncarter/Documents/VSchool/Classwork/module6/cue/client/src/components/forms/searchBar.js"],"names":["React","useState","useContext","useEffect","AppContext","SearchBar","type","setType","toggleMore","setToggleMore","moodLevel","setMoodLevel","inputs","setInputs","search","input","handleSubmit","e","preventDefault","select","document","createElement","option","in","option2","option3","option4","newOptionSelect","append","i","target","value","prevState","console","log"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\nimport { AppContext } from '../context/appContext.js';\n\nexport const SearchBar = () => {\n    const [ type, setType ] = useState('friend');\n    const [ toggleMore, setToggleMore ] = useState(false);\n    const [ moodLevel, setMoodLevel ] = useState(0);\n    const [ inputs, setInputs ] = useState('');\n    const { search } = useContext(AppContext);\n    let input\n\n    function handleSubmit(e){\n        e.preventDefault()\n        search(inputs, type)\n        setInputs('')\n    }\n\n    // useEffect(() => {\n    //     if(moodLevel >= 3){\n    //         setMoodLevel(3)\n    //     }\n    // },[moodLevel])\n\n    useEffect(() => {\n        const select = document.createElement('select')\n        const option = document.createElement('option')\n        option.in\n        const option2 = document.createElement('option')\n        const option3 = document.createElement('option')\n        const option4 = document.createElement('option')\n        const newOptionSelect = select.append(option)\n        for(let i =0 ; i < moodLevel; i++){\n            return input.append(newOptionSelect)\n        }\n    }, )\n\n    return(\n        <form className='grid' onSubmit={handleSubmit}>\n            <span className='text-left grid grid-cols-4'>\n                <select className='col-span-2 p-1 m-1 mb-2 text-navy-900 rounded' onChange={e => setType(e.target.value)}>\n                    <option> friend </option>\n                    <option> mood </option>\n                </select> \n                {type === 'mood' ? \n                <>\n                    <select className='col-span-2 p-1 m-1 text-indigo-600 bg-indigo-300 rounded' onChange={e => setType(e.target.value)}>\n                        <option> - select - </option>\n                        <option> placeholder </option>\n                        <option> placeholder </option>\n                        <option> placeholder </option>\n                        <option> placeholder </option>\n                    </select> \n                    <button onClick={()=> setMoodLevel(prevState => prevState !== 3 ? prevState +1 : prevState)}> deepen mood </button>\n                    {console.log(moodLevel)}\n                    {input}\n                    </>\n                    :\n                    <input className='col-span-4 text-indigo-900 p-1 w-full rounded' type='text' value={inputs} onChange={e => setInputs(e.target.value)} placeholder={`${type === 'friend' ? `What's their username` : `What's the ${type}`}?`} required/>\n                }\n            </span>\n            <button className='bg-cyan-200 text-cyan-800 rounded p-1 m-2'> find {type} </button> \n        </form>\n    )\n}"]},"metadata":{},"sourceType":"module"}