{"ast":null,"code":"var _jsxFileName = \"/Users/quinntoncarter/Documents/VSchool/Classwork/module6/cue/client/src/components/context/appContext.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport axios from 'axios';\nimport { accessToken } from '../spotify.js';\nimport { UserContext } from './userProvider.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AppContext = /*#__PURE__*/React.createContext();\nexport default function AppContextProvider(props) {\n  _s();\n\n  const spotifyUserAPI = axios.create();\n  spotifyUserAPI.interceptors.request.use(config => {\n    config.headers.Authorization = `Bearer ${accessToken}`;\n    config.baseURL = 'https://api.spotify.com/v1';\n    return config;\n  });\n  const {\n    userAxios,\n    spotifyUser: {\n      display_name\n    }\n  } = useContext(UserContext);\n  const [monthlyArtists, setMonthlyArtists] = useState({});\n  const [monthlyTracks, setMonthlyTracks] = useState({});\n  const [found, setFound] = useState([]);\n  const [playlists, setPlaylists] = useState({\n    items: [],\n    total: 0\n  });\n  const [playlistTracks, setPlaylistTracks] = useState([]);\n  const [selectedItem, setSelectedItem] = useState({});\n  const [trackFeatures, setTrackFeatures] = [{\n    danceability: '',\n    energy: '',\n    tempo: ''\n  }];\n\n  const search = (inputs, type) => {\n    const parseInputs = inputs.split(' ').join('_');\n    userAxios.get(`/app/users`, {\n      params: {\n        inputs: parseInputs,\n        type: type\n      }\n    }).then(res => setFound(res.data)).catch(err => console.log(err));\n  };\n\n  const getSelection = (id, location) => {\n    userAxios.get(`/app/users`, {\n      params: {\n        id: id,\n        type: location\n      }\n    }).then(res => setSelectedItem(res.data)).catch(err => console.log(err));\n  };\n\n  const getCurrentUserTop = async (type, limit, time_range) => {\n    const {\n      data\n    } = await spotifyUserAPI.get(`/me/top/${type}`, {\n      params: {\n        limit: limit,\n        time_range: time_range\n      }\n    });\n    return data;\n  };\n\n  const getPlaylists = async id => {\n    const {\n      data\n    } = await spotifyUserAPI.get(`/users/${id}/playlists`, {\n      params: {\n        limit: 50\n      }\n    }); // not spotif owned\n\n    const collected = data.items.filter(item => item.owner.display_name !== 'Spotify'); // less than or equal to 100 tracks\n\n    const fit = collected.filter(item => item.tracks.total <= 100);\n    return fit;\n  }; // for finding overall playlist analysis data; id = playlistId **\n\n\n  const getPlaylistTracks = async id => {\n    const {\n      data\n    } = await spotifyUserAPI.get(`/playlists/${id}/tracks`);\n    setPlaylistTracks(data);\n  };\n\n  const getTracksFeatures = async () => {\n    const trackIdsString = playlistTracks.items.map(item => {\n      return item.track.id;\n    }).toString();\n    const {\n      data\n    } = await spotifyUserAPI.get(`/audio-features`, {\n      params: {\n        ids: trackIdsString\n      }\n    });\n    const parseNA = data.audio_features.filter(item => item !== null);\n    test(parseNA);\n  }; //*** */ make this into full out analysis; gets features and track analysis ***\n  // median tempo, key, loudness.\n\n\n  const test = items => {\n    // valence, loudness, tempo, energy, danceability\n    const verHighDance = items.filter(item => item.danceability >= .75);\n    const highDance = items.filter(item => item.danceability >= .65 && item.danceability <= .75);\n    const mediumDance = items.filter(item => item.danceability <= .6 && item.danceability >= .4);\n    const lowDance = items.filter(item => item.danceability <= .4 && item.danceability >= .2);\n    const verLowDance = items.filter(item => item.danceability <= .2);\n    const playlistDance = [{\n      extreme: verHighDance,\n      high: highDance,\n      medium: mediumDance,\n      low: lowDance,\n      extremeLow: verLowDance\n    }];\n    const sort = playlistDance.sort((a, b) => a.danceability > b.danceability) ? 1 : -1;\n    console.log(sort); // console.log(len)\n    // const arrSort = playlistDance.sort();\n    // const mid = Math.ceil(len / 2);\n    // console.log(mid)\n    // const median = len % 2 === 0 ? (arrSort[mid] + arrSort[mid - 1]) / 2 : arrSort[mid - 1];\n    // console.log(playlistDance)\n  };\n\n  useEffect(() => {\n    getCurrentUserTop('artists', 5, 'short_term').then(res => setMonthlyArtists(res)).catch(err => console.log(err));\n    getCurrentUserTop('tracks', 5, 'short_term').then(res => setMonthlyTracks(res)).catch(err => console.log(err));\n  }, []); // *** for testing\n\n  useEffect(() => {\n    console.log(trackFeatures);\n  }, [trackFeatures]); // ***\n\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: {\n      monthlyArtists,\n      monthlyTracks,\n      spotifyUserAPI,\n      search,\n      found,\n      setFound,\n      selectedItem,\n      getSelection,\n      getPlaylists,\n      playlists,\n      setPlaylists,\n      getPlaylistTracks,\n      playlistTracks,\n      getCurrentUserTop,\n      getTracksFeatures\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AppContextProvider, \"TxaJZnYOAKclG04Sk0PiTgKKoYs=\");\n\n_c = AppContextProvider;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"AppContextProvider\");","map":{"version":3,"sources":["/Users/quinntoncarter/Documents/VSchool/Classwork/module6/cue/client/src/components/context/appContext.js"],"names":["React","useState","useEffect","useContext","axios","accessToken","UserContext","AppContext","createContext","AppContextProvider","props","spotifyUserAPI","create","interceptors","request","use","config","headers","Authorization","baseURL","userAxios","spotifyUser","display_name","monthlyArtists","setMonthlyArtists","monthlyTracks","setMonthlyTracks","found","setFound","playlists","setPlaylists","items","total","playlistTracks","setPlaylistTracks","selectedItem","setSelectedItem","trackFeatures","setTrackFeatures","danceability","energy","tempo","search","inputs","type","parseInputs","split","join","get","params","then","res","data","catch","err","console","log","getSelection","id","location","getCurrentUserTop","limit","time_range","getPlaylists","collected","filter","item","owner","fit","tracks","getPlaylistTracks","getTracksFeatures","trackIdsString","map","track","toString","ids","parseNA","audio_features","test","verHighDance","highDance","mediumDance","lowDance","verLowDance","playlistDance","extreme","high","medium","low","extremeLow","sort","a","b","children"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport axios from 'axios';\nimport { accessToken } from '../spotify.js';\nimport { UserContext } from './userProvider.js';\n\nexport const AppContext = React.createContext();\n\nexport default function AppContextProvider(props){\n    const spotifyUserAPI = axios.create();\n    spotifyUserAPI.interceptors.request.use(config => {\n        config.headers.Authorization = `Bearer ${accessToken}`\n        config.baseURL = 'https://api.spotify.com/v1'\n        return config\n    });\n    const {\n        userAxios,\n        spotifyUser: {\n            display_name\n        }\n    } = useContext(UserContext);\n\n    const [ monthlyArtists, setMonthlyArtists ] = useState({});\n    const [ monthlyTracks, setMonthlyTracks ] = useState({});\n    const [ found, setFound ] = useState([]);\n\n    const [ playlists, setPlaylists ] = useState({ items:[], total: 0});\n    const [ playlistTracks, setPlaylistTracks ] = useState([]);\n    const [ selectedItem, setSelectedItem ] = useState({});\n    const [ trackFeatures, setTrackFeatures ] = ([{\n        danceability: '',\n        energy: '',\n        tempo: ''\n    }])\n\n    const search = (inputs, type) => {\n        const parseInputs = inputs.split(' ').join('_')\n        userAxios.get(`/app/users`, {\n            params: {\n                inputs: parseInputs,\n                type: type\n            }\n        })\n        .then(res => setFound(res.data))\n        .catch(err => console.log(err))\n    };\n\n    const getSelection = (id, location) => {\n        userAxios.get(`/app/users`, {\n            params: {\n                id: id,\n                type: location\n            }\n        })\n        .then(res => setSelectedItem(res.data))\n        .catch(err => console.log(err))\n    };\n\n    const getCurrentUserTop = async (type, limit, time_range) => {\n            const { data } = await spotifyUserAPI.get(`/me/top/${type}`,{\n            params: {\n                limit: limit,\n                time_range: time_range\n            }\n        })\n            return data\n        };\n\n    const getPlaylists = async (id) => {\n        const { data } = await spotifyUserAPI.get(`/users/${id}/playlists`,{\n            params: {\n                limit: 50\n            }\n        })\n        // not spotif owned\n        const collected = data.items.filter(item => item.owner.display_name !== 'Spotify');\n        // less than or equal to 100 tracks\n        const fit = collected.filter(item => item.tracks.total <= 100)\n        return fit\n    };\n\n    // for finding overall playlist analysis data; id = playlistId **\n    const getPlaylistTracks = async (id) => {\n        const { data } = await spotifyUserAPI.get(`/playlists/${id}/tracks`)\n        setPlaylistTracks(data)\n    };\n\n    const getTracksFeatures = async () => {\n        const trackIdsString = playlistTracks.items.map(item => {\n            return item.track.id\n        }).toString()\n        const { data } = await spotifyUserAPI.get(`/audio-features`, {\n            params: {\n                ids: trackIdsString\n            }\n        })\n        const parseNA = data.audio_features.filter(item => item !== null)\n        test(parseNA)\n    };\n    \n    //*** */ make this into full out analysis; gets features and track analysis ***\n    // median tempo, key, loudness.\n    const test = (items) => {\n        // valence, loudness, tempo, energy, danceability\n        const verHighDance = items.filter(item => item.danceability >= .75)\n        const highDance = items.filter(item => item.danceability >= .65 && item.danceability <= .75)\n        const mediumDance = items.filter(item => item.danceability <= .6 && item.danceability >= .4)\n        const lowDance = items.filter(item => item.danceability <= .4 && item.danceability >= .2)\n        const verLowDance = items.filter(item => item.danceability <= .2)\n        const playlistDance = [{\n            extreme: verHighDance,\n            high: highDance,\n            medium: mediumDance,\n            low: lowDance,\n            extremeLow: verLowDance\n        }]\n        const sort = playlistDance.sort((a,b) => a.danceability > b.danceability) ? 1: -1;\n        console.log(sort)\n        // console.log(len)\n        // const arrSort = playlistDance.sort();\n        // const mid = Math.ceil(len / 2);\n        // console.log(mid)\n        // const median = len % 2 === 0 ? (arrSort[mid] + arrSort[mid - 1]) / 2 : arrSort[mid - 1];\n\n        // console.log(playlistDance)\n    }\n    \n    useEffect(() => {\n        getCurrentUserTop('artists', 5, 'short_term')\n        .then(res => setMonthlyArtists(res))\n        .catch(err => console.log(err))\n        getCurrentUserTop('tracks', 5, 'short_term')\n        .then(res => setMonthlyTracks(res))\n        .catch(err => console.log(err))\n    }, []);\n\n    // *** for testing\n    useEffect(() => {\n        console.log(trackFeatures)\n    },[trackFeatures]);\n    // ***\n\n    return(\n        <AppContext.Provider\n        value={{\n            monthlyArtists,\n            monthlyTracks,\n            spotifyUserAPI,\n            search,\n            found,\n            setFound,\n            selectedItem,\n            getSelection,\n            getPlaylists,\n            playlists,\n            setPlaylists,\n            getPlaylistTracks,\n            playlistTracks,\n            getCurrentUserTop,\n            getTracksFeatures\n        }}>\n            {props.children}\n        </AppContext.Provider>\n    )\n};"]},"metadata":{},"sourceType":"module"}