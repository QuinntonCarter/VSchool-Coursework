{"ast":null,"code":"var _jsxFileName = \"/Users/quinntoncarter/Documents/VSchool/Classwork/module6/cue/client/src/Auth.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext, useEffect } from 'react';\nimport AuthForm from './components/forms/authForm.js';\nimport { UserContext } from './components/context/userProvider.js';\nimport { accessToken, getCurrentUserProfile } from './components/spotify.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Auth() {\n  _s();\n\n  const initInputs = {\n    username: '',\n    password: ''\n  };\n  const initState = {\n    spotifyUser: JSON.parse(localStorage.getItem('spotifyUser')) || {},\n    spotifyToken: localStorage.getItem('spotify_access_token') || null,\n    errMsg: ''\n  };\n  const [inputs, setInputs] = useState(initInputs);\n  const [toggle, setToggle] = useState(false);\n  const [spotifyUserState, setSpotifyUserState] = useState(initState);\n  const {\n    signup,\n    login,\n    logout,\n    errMsg,\n    resetAuthError\n  } = useContext(UserContext);\n\n  function handleChange(e) {\n    const {\n      name,\n      value\n    } = e.target;\n    setInputs(prevInputs => ({ ...prevInputs,\n      [name]: value\n    }));\n  }\n\n  ;\n\n  function handleSignup(e) {\n    e.preventDefault();\n    signup(inputs);\n  }\n\n  ;\n\n  function handleLogin(e) {\n    e.preventDefault();\n    login(inputs);\n  }\n\n  ;\n\n  function toggleForm() {\n    setToggle(prev => !prev);\n    resetAuthError();\n    setInputs(initInputs);\n  }\n\n  ;\n  useEffect(() => {\n    if (accessToken) {\n      // ** BETA get token from userState\n      // setSpotifyToken(accessToken);\n      localStorage.setItem('spotify_access_token', accessToken);\n      setSpotifyUserState(prevState => ({ ...prevState,\n        spotifyToken: accessToken\n      }));\n\n      const fetchData = async () => {\n        try {\n          const {\n            data\n          } = await getCurrentUserProfile(); // setSpotifyProfile(data);\n          // where user information should be sent to back for use in model\n          // will need to reapply email each time on login\n          // just post to signup model route for new users\n\n          localStorage.setItem('spotifyUser', JSON.stringify(data));\n          setSpotifyUserState(prevState => ({ ...prevState,\n            spotifyUser: data\n          }));\n        } catch (err) {\n          // ** send error to auth handler\n          console.error(err);\n        }\n      };\n\n      fetchData(); // ***** ** logout useeffect for token expiration; should only work if refresh token is off ** *****\n    } else if (!accessToken && spotifyUserState.spotifyToken) {\n      logout();\n    } else if (!accessToken & !spotifyUserState.spotifyToken) {\n      logout(); // ***** ***** *****\n    }\n  }, [spotifyUserState.spotifyToken, logout]);\n  return spotifyUserState.spotifyToken ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"authContainer\",\n    children: !toggle ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"header\",\n        children: \" Create Account \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(AuthForm, {\n        handleChange: handleChange,\n        handleSubmit: handleSignup,\n        inputs: inputs,\n        btnText: \"create\",\n        errMsg: errMsg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          cursor: 'pointer'\n        },\n        onClick: toggleForm,\n        children: \" I have an account! \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"header\",\n        children: \" Login \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(AuthForm, {\n        handleChange: handleChange,\n        handleSubmit: handleLogin,\n        inputs: inputs,\n        btnText: \"login\",\n        errMsg: errMsg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          cursor: 'pointer'\n        },\n        onClick: toggleForm,\n        children: \" I'm not a member! \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 9\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"https://developer.spotify.com/assets/branding-guidelines/logo.png\",\n      alt: \"spotify-logo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"http://localhost:8888/login\",\n      children: \" Login with Spotify \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Auth, \"iJXCx6hy/Rth+6rHBmKjVrN9XzQ=\");\n\n_c = Auth;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"sources":["/Users/quinntoncarter/Documents/VSchool/Classwork/module6/cue/client/src/Auth.js"],"names":["React","useState","useContext","useEffect","AuthForm","UserContext","accessToken","getCurrentUserProfile","Auth","initInputs","username","password","initState","spotifyUser","JSON","parse","localStorage","getItem","spotifyToken","errMsg","inputs","setInputs","toggle","setToggle","spotifyUserState","setSpotifyUserState","signup","login","logout","resetAuthError","handleChange","e","name","value","target","prevInputs","handleSignup","preventDefault","handleLogin","toggleForm","prev","setItem","prevState","fetchData","data","stringify","err","console","error","cursor"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\nimport AuthForm from './components/forms/authForm.js';\nimport { UserContext } from './components/context/userProvider.js';\nimport { accessToken, getCurrentUserProfile } from './components/spotify.js';\n\n\nexport default function Auth(){\n    const initInputs = {\n        username: '',\n        password: ''\n    };\n\n    const initState = {\n        spotifyUser: JSON.parse(localStorage.getItem('spotifyUser')) || {},\n        spotifyToken: localStorage.getItem('spotify_access_token') || null,\n        errMsg: ''\n    };\n\n    const [inputs, setInputs] = useState(initInputs);\n    const [toggle, setToggle] = useState(false);\n\n    const [ spotifyUserState, setSpotifyUserState ] = useState(initState);\n\n    const {\n        signup,\n        login,\n        logout,\n        errMsg,\n        resetAuthError\n    } = useContext(UserContext);\n\n    function handleChange(e){\n        const {name, value} = e.target\n        setInputs(prevInputs => ({\n            ...prevInputs,\n            [name]: value\n        }));\n    };\n\n    function handleSignup(e){\n        e.preventDefault()\n        signup(inputs)\n    };\n\n    function handleLogin(e){\n        e.preventDefault()\n        login(inputs)\n    };\n\n    function toggleForm(){\n        setToggle(prev => !prev)\n        resetAuthError()\n        setInputs(initInputs)\n    };\n\n    useEffect(()=> {\n        if(accessToken){\n        // ** BETA get token from userState\n            // setSpotifyToken(accessToken);\n            localStorage.setItem('spotify_access_token', accessToken)\n            setSpotifyUserState(prevState => ({\n                ...prevState,\n                spotifyToken: accessToken\n            }))\n            const fetchData = async () => {\n            try {\n                const { data } = await getCurrentUserProfile();\n                // setSpotifyProfile(data);\n                // where user information should be sent to back for use in model\n                // will need to reapply email each time on login\n                // just post to signup model route for new users\n                localStorage.setItem('spotifyUser', JSON.stringify(data))\n                setSpotifyUserState(prevState => ({\n                    ...prevState,\n                    spotifyUser: data\n                }))\n            } catch(err) {\n                // ** send error to auth handler\n                console.error(err);\n            }}\n            fetchData();\n        // ***** ** logout useeffect for token expiration; should only work if refresh token is off ** *****\n        } else if (!accessToken && spotifyUserState.spotifyToken){\n            logout();\n        } else if (!accessToken & !spotifyUserState.spotifyToken){\n            logout();\n        // ***** ***** *****\n        }\n    }, [spotifyUserState.spotifyToken, logout]);\n\n    return spotifyUserState.spotifyToken ? \n        <div className='authContainer'>\n                { !toggle ?\n                    <>\n                        <h1 className='header'> Create Account </h1>\n                            <AuthForm\n                                handleChange={handleChange}\n                                handleSubmit={handleSignup}\n                                inputs={inputs}\n                                btnText='create'\n                                errMsg={errMsg}\n                            />\n                        <p style={{cursor: 'pointer'}} onClick={toggleForm}> I have an account! </p>\n                    </>\n                    :\n                    <>\n                        <h1 className='header'> Login </h1>\n                            <AuthForm\n                                handleChange={handleChange}\n                                handleSubmit={handleLogin}\n                                inputs={inputs}\n                                btnText='login'\n                                errMsg={errMsg}\n                            />\n                        <p style={{cursor: 'pointer'}} onClick={toggleForm}> I'm not a member! </p>\n                    </>\n                }\n        </div>\n        :\n        <div>\n            <img src=\"https://developer.spotify.com/assets/branding-guidelines/logo.png\" alt=\"spotify-logo\"/>\n            <a href=\"http://localhost:8888/login\"> Login with Spotify </a>\n        </div>\n};"]},"metadata":{},"sourceType":"module"}