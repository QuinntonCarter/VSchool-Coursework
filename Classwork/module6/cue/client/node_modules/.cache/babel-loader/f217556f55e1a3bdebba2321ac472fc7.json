{"ast":null,"code":"var _jsxFileName = \"/Users/quinntoncarter/Documents/VSchool/Classwork/module6/cue/client/src/components/context/appContext.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport axios from 'axios';\nimport { accessToken } from '../spotify.js';\nimport { UserContext } from './userProvider.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AppContext = /*#__PURE__*/React.createContext();\nexport default function AppContextProvider(props) {\n  _s();\n\n  const spotifyUserAPI = axios.create();\n  spotifyUserAPI.interceptors.request.use(config => {\n    config.headers.Authorization = `Bearer ${accessToken}`;\n    config.baseURL = 'https://api.spotify.com/v1';\n    return config;\n  });\n  const {\n    userAxios,\n    spotifyUser: {\n      id\n    }\n  } = useContext(UserContext);\n  const [monthlyArtists, setWeeklyArtists] = useState({});\n  const [monthlyTracks, setWeeklyTracks] = useState({});\n  const [found, setFound] = useState([]); // for analysis of playlist feel **\n\n  const [playlists, setPlaylists] = useState([]);\n  const [playlistTracks, setPlaylistTracks] = useState([]);\n  const [selectedItem, setSelectedItem] = useState({});\n\n  function search(inputs, type) {\n    const parseInputs = inputs.split(' ').join('_');\n    userAxios.get(`/app/users`, {\n      params: {\n        inputs: parseInputs,\n        type: type\n      }\n    }).then(res => setFound(res.data)).catch(err => console.log(err));\n  }\n\n  function getSelection(id, location) {\n    userAxios.get(`/app/users`, {\n      params: {\n        id: id,\n        type: location\n      }\n    }).then(res => setSelectedItem(res.data)).catch(err => console.log(err));\n  }\n\n  function getCurrentUserTop(type, limit, time_range) {\n    spotifyUserAPI.get(`/me/top/${type}`, {\n      params: {\n        limit: limit,\n        time_range: time_range\n      }\n    });\n    return res.data;\n  }\n\n  function getCurrentUserPlaylists() {\n    spotifyUserAPI.get(`/users/${id}/playlists`, {\n      params: {\n        limit: 50\n      }\n    }).then(res => setPlaylists(res.data.items)).catch(err => console.log(err));\n  } // for finding overall playlist analysis data; id = playlistId **\n\n\n  function getPlaylistTracks(id) {\n    spotifyUserAPI.get(`/playlists/${id}/tracks`).then(res => console.log(res.data)).catch(err => console.log(err));\n  }\n\n  console.log(playlists);\n  useEffect(() => {\n    function getCurrentUserTop(type, limit, time_range) {\n      spotifyUserAPI.get(`/me/top/${type}`, {\n        params: {\n          limit: limit,\n          time_range: time_range\n        }\n      }).then(res => setWeeklyArtists(res.data)).catch(err => console.log(err));\n    } // * for testing\n\n\n    getCurrentUserPlaylists(); // \n\n    getCurrentUserTop('artists', 5, 'short_term');\n  }, []);\n  useEffect(() => {\n    getCurrentUserTop('tracks', 5, 'short_term');\n  }, []);\n  useEffect(() => {}, []);\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: {\n      monthlyArtists,\n      monthlyTracks,\n      spotifyUserAPI,\n      search,\n      found,\n      setFound,\n      selectedItem,\n      getSelection\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AppContextProvider, \"Xk5rB6KVOhruHHar3gYzUp+iM6g=\");\n\n_c = AppContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AppContextProvider\");","map":{"version":3,"sources":["/Users/quinntoncarter/Documents/VSchool/Classwork/module6/cue/client/src/components/context/appContext.js"],"names":["React","useState","useEffect","useContext","axios","accessToken","UserContext","AppContext","createContext","AppContextProvider","props","spotifyUserAPI","create","interceptors","request","use","config","headers","Authorization","baseURL","userAxios","spotifyUser","id","monthlyArtists","setWeeklyArtists","monthlyTracks","setWeeklyTracks","found","setFound","playlists","setPlaylists","playlistTracks","setPlaylistTracks","selectedItem","setSelectedItem","search","inputs","type","parseInputs","split","join","get","params","then","res","data","catch","err","console","log","getSelection","location","getCurrentUserTop","limit","time_range","getCurrentUserPlaylists","items","getPlaylistTracks","children"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport axios from 'axios';\nimport { accessToken } from '../spotify.js';\nimport { UserContext } from './userProvider.js';\n\nexport const AppContext = React.createContext();\n\nexport default function AppContextProvider(props){\n    const spotifyUserAPI = axios.create();\n    spotifyUserAPI.interceptors.request.use(config => {\n        config.headers.Authorization = `Bearer ${accessToken}`\n        config.baseURL = 'https://api.spotify.com/v1'\n        return config\n    });\n    const {\n        userAxios,\n        spotifyUser : {\n            id\n        }\n    } = useContext(UserContext)\n\n    const [ monthlyArtists, setWeeklyArtists ] = useState({});\n    const [ monthlyTracks, setWeeklyTracks ] = useState({});\n    const [ found, setFound ] = useState([]);\n    // for analysis of playlist feel **\n    const [ playlists, setPlaylists ] = useState([]);\n    const [ playlistTracks, setPlaylistTracks ] = useState([]);\n    const [ selectedItem, setSelectedItem ] = useState({})\n\n    function search(inputs, type){\n        const parseInputs = inputs.split(' ').join('_')\n        userAxios.get(`/app/users`, {\n            params: {\n                inputs: parseInputs,\n                type: type\n            }\n        })\n        .then(res => setFound(res.data))\n        .catch(err => console.log(err))\n    }\n\n    function getSelection(id, location){\n        userAxios.get(`/app/users`, {\n            params: {\n                id: id,\n                type: location\n            }\n        })\n        .then(res => setSelectedItem(res.data))\n        .catch(err => console.log(err))\n    }\n\n    function getCurrentUserTop(type, limit, time_range){\n        spotifyUserAPI.get(`/me/top/${type}`,{\n        params: {\n            limit: limit,\n            time_range: time_range\n        }\n    })\n    return res.data\n    }\n\n    function getCurrentUserPlaylists(){\n        spotifyUserAPI.get(`/users/${id}/playlists`,{\n            params: {\n                limit: 50\n            }\n        })\n        .then(res => setPlaylists(res.data.items))\n        .catch(err => console.log(err))\n    }\n\n    // for finding overall playlist analysis data; id = playlistId **\n    function getPlaylistTracks(id){\n        spotifyUserAPI.get(`/playlists/${id}/tracks`)\n        .then(res => console.log(res.data))\n        .catch(err => console.log(err))\n    }\n    console.log(playlists)\n\n    useEffect(() => {\n        function getCurrentUserTop(type, limit, time_range){\n            spotifyUserAPI.get(`/me/top/${type}`,{\n            params: {\n                limit: limit,\n                time_range: time_range\n            }\n        })\n        .then(res => setWeeklyArtists(res.data))\n        .catch(err => console.log(err))\n        }\n        // * for testing\n        getCurrentUserPlaylists()\n        // \n        getCurrentUserTop('artists', 5, 'short_term')\n    },[])\n\n    useEffect(() => {\n        \n        getCurrentUserTop('tracks', 5, 'short_term')\n    },[])\n\n    useEffect(() => {\n        \n    },[])\n\n    return(\n        <AppContext.Provider\n        value={{\n            monthlyArtists,\n            monthlyTracks,\n            spotifyUserAPI,\n            search,\n            found,\n            setFound,\n            selectedItem,\n            getSelection\n        }}>\n            {props.children}\n        </AppContext.Provider>\n    )\n}"]},"metadata":{},"sourceType":"module"}