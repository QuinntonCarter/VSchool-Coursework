{"ast":null,"code":"var _jsxFileName = \"/Users/quinntoncarter/Documents/VSchool/Classwork/module6/cue/client/src/components/context/spotifyProvider.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SpotifyContext = React.createContext();\nexport default function SpotifyProvider() {\n  _s();\n\n  const [spotifyToken, setSpotifyToken] = useState(null);\n  useEffect(() => {\n    if (accessToken) {\n      setSpotifyToken(accessToken);\n\n      const fetchData = async () => {\n        try {\n          const {\n            data\n          } = await getCurrentUserProfile();\n          setSpotifyProfile(data);\n        } catch (e) {\n          console.error(e);\n        }\n      };\n\n      fetchData();\n    } else if (!accessToken & spotifyToken) {\n      return;\n    } else if (!accessToken & !spotifyToken) {\n      logout();\n    }\n  }, [spotifyToken, setSpotifyProfile, logout]);\n  return /*#__PURE__*/_jsxDEV(SpotifyContext.Provider, {\n    children: props.child\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SpotifyProvider, \"5Gom06PhEAqEaKSIS8hl7LblJCU=\");\n\n_c = SpotifyProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"SpotifyProvider\");","map":{"version":3,"sources":["/Users/quinntoncarter/Documents/VSchool/Classwork/module6/cue/client/src/components/context/spotifyProvider.js"],"names":["useEffect","useState","SpotifyContext","React","createContext","SpotifyProvider","spotifyToken","setSpotifyToken","accessToken","fetchData","data","getCurrentUserProfile","setSpotifyProfile","e","console","error","logout","props","child"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;AAEA,MAAMC,cAAc,GAAGC,KAAK,CAACC,aAAN,EAAvB;AAEA,eAAe,SAASC,eAAT,GAA0B;AAAA;;AACrC,QAAM,CAAEC,YAAF,EAAgBC,eAAhB,IAAoCN,QAAQ,CAAC,IAAD,CAAlD;AAGAD,EAAAA,SAAS,CAAC,MAAK;AACX,QAAGQ,WAAH,EAAe;AACXD,MAAAA,eAAe,CAACC,WAAD,CAAf;;AAEA,YAAMC,SAAS,GAAG,YAAY;AAC9B,YAAI;AACA,gBAAM;AAACC,YAAAA;AAAD,cAAS,MAAMC,qBAAqB,EAA1C;AACAC,UAAAA,iBAAiB,CAACF,IAAD,CAAjB;AACH,SAHD,CAGE,OAAMG,CAAN,EAAS;AACPC,UAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd;AAEH;AACA,OARD;;AASAJ,MAAAA,SAAS;AACZ,KAbD,MAaO,IAAI,CAACD,WAAD,GAAeF,YAAnB,EAAiC;AACpC;AACH,KAFM,MAEA,IAAI,CAACE,WAAD,GAAe,CAACF,YAApB,EAAiC;AACpCU,MAAAA,MAAM;AACT;AACJ,GAnBQ,EAmBN,CAACV,YAAD,EAAeM,iBAAf,EAAkCI,MAAlC,CAnBM,CAAT;AAqBA,sBACI,QAAC,cAAD,CAAgB,QAAhB;AAAA,cACKC,KAAK,CAACC;AADX;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;GA9BuBb,e;;KAAAA,e","sourcesContent":["import { useEffect, useState } from 'react';\n\nconst SpotifyContext = React.createContext();\n\nexport default function SpotifyProvider(){\n    const [ spotifyToken, setSpotifyToken ] = useState(null)\n\n\n    useEffect(()=> {\n        if(accessToken){\n            setSpotifyToken(accessToken);\n    \n            const fetchData = async () => {\n            try {\n                const {data} = await getCurrentUserProfile();\n                setSpotifyProfile(data);\n            } catch(e) {\n                console.error(e);\n    \n            }\n            }\n            fetchData();\n        } else if (!accessToken & spotifyToken) {\n            return;\n        } else if (!accessToken & !spotifyToken){\n            logout();\n        }\n    }, [spotifyToken, setSpotifyProfile, logout])\n    \n    return(\n        <SpotifyContext.Provider>\n            {props.child}\n        </SpotifyContext.Provider>\n    )\n}"]},"metadata":{},"sourceType":"module"}