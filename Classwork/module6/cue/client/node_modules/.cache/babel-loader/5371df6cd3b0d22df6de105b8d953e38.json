{"ast":null,"code":"var _jsxFileName = \"/Users/quinntoncarter/Documents/VSchool/Classwork/module6/cue/client/src/components/context/appContext.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport axios from 'axios';\nimport { spotifyUser } from '../spotify.js'; // refactor for use with spotify API (not for user information)\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AppContext = /*#__PURE__*/React.createContext();\nexport default function AppContextProvider(props) {\n  _s();\n\n  // will be sent to search.js and used in view\n  const [searchQuery, setSearchQuery] = useState([]);\n  const [songDetails, setSongDetails] = useState([]);\n\n  function searchByArtist(input) {\n    var querySplit = input.query.split(' ').join('%20');\n    var artistSplit = input.artist.split(' ').join('%20');\n    spotifyUser.get(`/search?q=artist:${artistSplit}&type=${input.type}&name=${querySplit}`).then(res => console.log(res.data)).catch(err => console.log(err));\n  } // // could be used to analyse songs\n\n\n  function getDetails(id) {\n    axios.get(`https://api.spotify.com/v1/`).then(res => setSongDetails(res.data)).catch(err => console.log(err));\n  }\n\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: {\n      searchByArtist,\n      searchQuery,\n      setSearchQuery,\n      songDetails\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AppContextProvider, \"gOm+qQfxOkv4qfQJJQm30IlPZYI=\");\n\n_c = AppContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AppContextProvider\");","map":{"version":3,"sources":["/Users/quinntoncarter/Documents/VSchool/Classwork/module6/cue/client/src/components/context/appContext.js"],"names":["React","useState","useEffect","useContext","axios","spotifyUser","AppContext","createContext","AppContextProvider","props","searchQuery","setSearchQuery","songDetails","setSongDetails","searchByArtist","input","querySplit","query","split","join","artistSplit","artist","get","type","then","res","console","log","data","catch","err","getDetails","id","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,eAA5B,C,CAGA;;;AACA,OAAO,MAAMC,UAAU,gBAAGN,KAAK,CAACO,aAAN,EAAnB;AAEP,eAAe,SAASC,kBAAT,CAA4BC,KAA5B,EAAkC;AAAA;;AAC7C;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACW,WAAD,EAAcC,cAAd,IAAgCZ,QAAQ,CAAC,EAAD,CAA9C;;AAGA,WAASa,cAAT,CAAwBC,KAAxB,EAA8B;AAC1B,QAAIC,UAAU,GAAGD,KAAK,CAACE,KAAN,CAAYC,KAAZ,CAAkB,GAAlB,EAAuBC,IAAvB,CAA4B,KAA5B,CAAjB;AACA,QAAIC,WAAW,GAAGL,KAAK,CAACM,MAAN,CAAaH,KAAb,CAAmB,GAAnB,EAAwBC,IAAxB,CAA6B,KAA7B,CAAlB;AACAd,IAAAA,WAAW,CAACiB,GAAZ,CAAiB,oBAAmBF,WAAY,SAAQL,KAAK,CAACQ,IAAK,SAAQP,UAAW,EAAtF,EACCQ,IADD,CACMC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAhB,CADb,EAECC,KAFD,CAEOC,GAAG,IAAIJ,OAAO,CAACC,GAAR,CAAYG,GAAZ,CAFd;AAGH,GAZ4C,CAc7C;;;AACA,WAASC,UAAT,CAAoBC,EAApB,EAAuB;AACnB5B,IAAAA,KAAK,CAACkB,GAAN,CAAW,6BAAX,EACCE,IADD,CACMC,GAAG,IAAIZ,cAAc,CAACY,GAAG,CAACG,IAAL,CAD3B,EAECC,KAFD,CAEOC,GAAG,IAAIJ,OAAO,CAACC,GAAR,CAAYG,GAAZ,CAFd;AAGH;;AAED,sBACI,QAAC,UAAD,CAAY,QAAZ;AACA,IAAA,KAAK,EAAE;AACHhB,MAAAA,cADG;AAEHJ,MAAAA,WAFG;AAGHC,MAAAA,cAHG;AAIHC,MAAAA;AAJG,KADP;AAAA,cAOKH,KAAK,CAACwB;AAPX;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH;;GAhCuBzB,kB;;KAAAA,kB","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport axios from 'axios';\nimport { spotifyUser } from '../spotify.js';\n\n\n// refactor for use with spotify API (not for user information)\nexport const AppContext = React.createContext();\n\nexport default function AppContextProvider(props){\n    // will be sent to search.js and used in view\n    const [searchQuery, setSearchQuery] = useState([]);\n    const [songDetails, setSongDetails] = useState([]);\n\n\n    function searchByArtist(input){\n        var querySplit = input.query.split(' ').join('%20');\n        var artistSplit = input.artist.split(' ').join('%20');\n        spotifyUser.get(`/search?q=artist:${artistSplit}&type=${input.type}&name=${querySplit}`)\n        .then(res => console.log(res.data))\n        .catch(err => console.log(err))\n    }\n\n    // // could be used to analyse songs\n    function getDetails(id){\n        axios.get(`https://api.spotify.com/v1/`)\n        .then(res => setSongDetails(res.data))\n        .catch(err => console.log(err))\n    }\n\n    return(\n        <AppContext.Provider\n        value={{\n            searchByArtist,\n            searchQuery,\n            setSearchQuery,\n            songDetails\n        }}>\n            {props.children}\n        </AppContext.Provider>\n    )\n}"]},"metadata":{},"sourceType":"module"}