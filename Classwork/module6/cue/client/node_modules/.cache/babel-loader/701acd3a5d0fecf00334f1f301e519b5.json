{"ast":null,"code":"var _jsxFileName = \"/Users/quinntoncarter/Documents/VSchool/Classwork/module6/cue/client/src/components/context/appContext.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport axios from 'axios';\nimport { accessToken } from '../spotify.js';\nimport { UserContext } from './userProvider.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AppContext = /*#__PURE__*/React.createContext();\nexport default function AppContextProvider(props) {\n  _s();\n\n  const spotifyUserAPI = axios.create();\n  spotifyUserAPI.interceptors.request.use(config => {\n    config.headers.Authorization = `Bearer ${accessToken}`;\n    config.baseURL = 'https://api.spotify.com/v1';\n    return config;\n  });\n  const {\n    userAxios\n  } = useContext(UserContext);\n  const [monthlyArtists, setMonthlyArtists] = useState({});\n  const [monthlyTracks, setMonthlyTracks] = useState({});\n  const [found, setFound] = useState([]);\n  const [playlists, setPlaylists] = useState({\n    items: [],\n    total: 0\n  });\n  const [playlistTracks, setPlaylistTracks] = useState([]);\n  const [selectedItem, setSelectedItem] = useState({});\n  const [trackFeatures, setTrackFeatures] = [{\n    danceability: '',\n    energy: '',\n    tempo: ''\n  }];\n\n  const search = (inputs, type) => {\n    const parseInputs = inputs.split(' ').join('_');\n    userAxios.get(`/app/users`, {\n      params: {\n        inputs: parseInputs,\n        type: type\n      }\n    }).then(res => setFound(res.data)).catch(err => console.log(err));\n  };\n\n  const getSelection = (id, location) => {\n    userAxios.get(`/app/users`, {\n      params: {\n        id: id,\n        type: location\n      }\n    }).then(res => setSelectedItem(res.data)).catch(err => console.log(err));\n  };\n\n  const getCurrentUserTop = async (type, limit, time_range) => {\n    const {\n      data\n    } = await spotifyUserAPI.get(`/me/top/${type}`, {\n      params: {\n        limit: limit,\n        time_range: time_range\n      }\n    });\n    return data;\n  };\n\n  const getPlaylists = async id => {\n    const collected = [];\n    const {\n      data\n    } = await spotifyUserAPI.get(`/users/${id}/playlists`, {\n      params: {\n        limit: 50\n      }\n    }); // ** omit spotify owned playlistst **\n\n    const test = data.items.map(item => {\n      if (item.owner.display_name !== 'Spotify') return item;\n    });\n    return console.log9test;\n  }; // for finding overall playlist analysis data; id = playlistId **\n\n\n  const getPlaylistTracks = async id => {\n    const {\n      data\n    } = await spotifyUserAPI.get(`/playlists/${id}/tracks`);\n    setPlaylistTracks(data);\n  };\n\n  const getTracksFeatures = () => {\n    const trackIdsString = playlistTracks.items.map(item => {\n      return item.track.id;\n    }).toString();\n    spotifyUserAPI.get(`/audio-features`, {\n      params: {\n        ids: trackIdsString\n      }\n    }) // map through to function \n    .then(res => res.data.audio_features.map(item => test(item))).catch(err => console.log(err));\n  }; //*** */ make this into full out analysis; gets features and track analysis ***\n  // median tempo, key, loudness.\n\n\n  const test = items => {};\n\n  useEffect(() => {\n    getCurrentUserTop('artists', 5, 'short_term').then(res => setMonthlyArtists(res)).catch(err => console.log(err));\n    getCurrentUserTop('tracks', 5, 'short_term').then(res => setMonthlyTracks(res)).catch(err => console.log(err));\n  }, []); // *** for testing\n\n  useEffect(() => {\n    console.log(trackFeatures);\n  }, [trackFeatures]); // ***\n\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: {\n      monthlyArtists,\n      monthlyTracks,\n      spotifyUserAPI,\n      search,\n      found,\n      setFound,\n      selectedItem,\n      getSelection,\n      getPlaylists,\n      playlists,\n      setPlaylists,\n      getPlaylistTracks,\n      playlistTracks,\n      getCurrentUserTop,\n      getTracksFeatures\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AppContextProvider, \"eZg9P8zUiK+QRFC9W0QyQLA2h0w=\");\n\n_c = AppContextProvider;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"AppContextProvider\");","map":{"version":3,"sources":["/Users/quinntoncarter/Documents/VSchool/Classwork/module6/cue/client/src/components/context/appContext.js"],"names":["React","useState","useEffect","useContext","axios","accessToken","UserContext","AppContext","createContext","AppContextProvider","props","spotifyUserAPI","create","interceptors","request","use","config","headers","Authorization","baseURL","userAxios","monthlyArtists","setMonthlyArtists","monthlyTracks","setMonthlyTracks","found","setFound","playlists","setPlaylists","items","total","playlistTracks","setPlaylistTracks","selectedItem","setSelectedItem","trackFeatures","setTrackFeatures","danceability","energy","tempo","search","inputs","type","parseInputs","split","join","get","params","then","res","data","catch","err","console","log","getSelection","id","location","getCurrentUserTop","limit","time_range","getPlaylists","collected","test","map","item","owner","display_name","log9test","getPlaylistTracks","getTracksFeatures","trackIdsString","track","toString","ids","audio_features","children"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport axios from 'axios';\nimport { accessToken } from '../spotify.js';\nimport { UserContext } from './userProvider.js';\n\nexport const AppContext = React.createContext();\n\nexport default function AppContextProvider(props){\n    const spotifyUserAPI = axios.create();\n    spotifyUserAPI.interceptors.request.use(config => {\n        config.headers.Authorization = `Bearer ${accessToken}`\n        config.baseURL = 'https://api.spotify.com/v1'\n        return config\n    });\n    const {\n        userAxios\n    } = useContext(UserContext);\n\n    const [ monthlyArtists, setMonthlyArtists ] = useState({});\n    const [ monthlyTracks, setMonthlyTracks ] = useState({});\n    const [ found, setFound ] = useState([]);\n\n    const [ playlists, setPlaylists ] = useState({ items:[], total: 0});\n    const [ playlistTracks, setPlaylistTracks ] = useState([]);\n    const [ selectedItem, setSelectedItem ] = useState({});\n    const [ trackFeatures, setTrackFeatures ] = ([{\n        danceability: '',\n        energy: '',\n        tempo: ''\n    }])\n\n    const search = (inputs, type) => {\n        const parseInputs = inputs.split(' ').join('_')\n        userAxios.get(`/app/users`, {\n            params: {\n                inputs: parseInputs,\n                type: type\n            }\n        })\n        .then(res => setFound(res.data))\n        .catch(err => console.log(err))\n    };\n\n    const getSelection = (id, location) => {\n        userAxios.get(`/app/users`, {\n            params: {\n                id: id,\n                type: location\n            }\n        })\n        .then(res => setSelectedItem(res.data))\n        .catch(err => console.log(err))\n    };\n\n    const getCurrentUserTop = async (type, limit, time_range) => {\n            const { data } = await spotifyUserAPI.get(`/me/top/${type}`,{\n            params: {\n                limit: limit,\n                time_range: time_range\n            }\n        })\n            return data\n        };\n\n    const getPlaylists = async (id) => {\n        const collected =[]\n        const { data } = await spotifyUserAPI.get(`/users/${id}/playlists`,{\n            params: {\n                limit: 50\n            }\n        })\n        // ** omit spotify owned playlistst **\n        const test = data.items.map(item => {\n            if(item.owner.display_name !== 'Spotify')\n            return item\n        })\n        return console.log9test\n    };\n\n    // for finding overall playlist analysis data; id = playlistId **\n    const getPlaylistTracks = async (id) => {\n        const { data } = await spotifyUserAPI.get(`/playlists/${id}/tracks`)\n        setPlaylistTracks(data)\n    };\n\n    const getTracksFeatures = () => {\n        const trackIdsString = playlistTracks.items.map(item => {\n            return item.track.id\n        }).toString()\n        spotifyUserAPI.get(`/audio-features`, {\n            params: {\n                ids: trackIdsString\n            }\n        })\n        // map through to function \n        .then(res => \n            res.data.audio_features.map(item => test(item))\n        )\n        .catch(err => console.log(err))\n    };\n    \n//*** */ make this into full out analysis; gets features and track analysis ***\n// median tempo, key, loudness.\n    const test = (items) => {\n\n    }\n\n    \n    useEffect(() => {\n        getCurrentUserTop('artists', 5, 'short_term')\n        .then(res => setMonthlyArtists(res))\n        .catch(err => console.log(err))\n        getCurrentUserTop('tracks', 5, 'short_term')\n        .then(res => setMonthlyTracks(res))\n        .catch(err => console.log(err))\n    }, []);\n\n    // *** for testing\n    useEffect(() => {\n        console.log(trackFeatures)\n    },[trackFeatures]);\n    // ***\n\n    return(\n        <AppContext.Provider\n        value={{\n            monthlyArtists,\n            monthlyTracks,\n            spotifyUserAPI,\n            search,\n            found,\n            setFound,\n            selectedItem,\n            getSelection,\n            getPlaylists,\n            playlists,\n            setPlaylists,\n            getPlaylistTracks,\n            playlistTracks,\n            getCurrentUserTop,\n            getTracksFeatures\n        }}>\n            {props.children}\n        </AppContext.Provider>\n    )\n};"]},"metadata":{},"sourceType":"module"}