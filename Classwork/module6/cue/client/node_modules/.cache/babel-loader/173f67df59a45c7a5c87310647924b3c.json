{"ast":null,"code":"var _jsxFileName = \"/Users/quinntoncarter/Documents/VSchool/Classwork/module6/cue/client/src/views/profile.js\",\n    _s = $RefreshSig$();\n\nimport { useContext, useState, useEffect } from 'react';\nimport { Switch, Route } from 'react-router-dom'; // also doubles as profile view, inlcudes weekly list component\n\nimport { getCurrentUserTop } from '../components/spotify.js'; // includes user information from userContext\n\nimport { UserContext } from '../components/context/userProvider.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Profile() {\n  _s();\n\n  const {\n    user,\n    spotifyUser\n  } = useContext(UserContext); // const {\n  // } = useContext(AppContext)\n\n  const [view, setView] = useState('artists');\n  const [weeklyArtist, setWeeklyArtist] = useState({});\n  const [weeklyTracks, setWeeklyTracks] = useState({}); // /pull from mongodb, saved lists\n\n  const mappedLists = 'first option ternary; if lists? first here if not no lists yet'; // useEffect(() => {\n  //     const fetchUserRecents = async () => {\n  //         const { dataArtist } = await getCurrentUserTop('artists', 3, 'short_term')\n  //         const { dataTracks } = await getCurrentUserTop('tracks', 3, 'short_term')\n  //         setWeeklyArtist(dataArtist)\n  //         setWeeklyTracks(dataTracks)\n  //     }\n  //     fetchUserRecents();\n  // },[])\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"listprofileview-Container\",\n    children: [console.log(spotifyUser), /*#__PURE__*/_jsxDEV(\"select\", {\n      children: /*#__PURE__*/_jsxDEV(\"option\", {\n        children: \" - no lists yet - \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n      style: {\n        fontSize: '27px'\n      },\n      className: \"fab fa-spotify\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\" Spotify: \", spotifyUser ? spotifyUser.display_name : 'error', \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 72\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\" Username: @\", user.username, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: spotifyUser.images[0].url,\n      alt: \"spotify-user-img\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          color: 'gray'\n        },\n        children: \" past week top listens (toggle by artist or track) \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), \"artists\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        name: \"viewType\",\n        value: \"artists\",\n        onClick: e => setView(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), \"tracks\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        name: \"viewType\",\n        value: \"tracks\",\n        onClick: e => setView(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), \"gang\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        name: \"viewType\",\n        value: \"following\",\n        onClick: e => setView(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/profile/artists\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/profile/tracks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/profile/friends\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Profile, \"Q8NZa0TwjS4/4wsKoDoaFU+jj24=\");\n\n_c = Profile;\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["/Users/quinntoncarter/Documents/VSchool/Classwork/module6/cue/client/src/views/profile.js"],"names":["useContext","useState","useEffect","Switch","Route","getCurrentUserTop","UserContext","Profile","user","spotifyUser","view","setView","weeklyArtist","setWeeklyArtist","weeklyTracks","setWeeklyTracks","mappedLists","console","log","fontSize","display_name","username","images","url","color","e","target","value"],"mappings":"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","sourcesContent":["import { useContext, useState, useEffect } from 'react';\nimport { Switch, Route } from 'react-router-dom';\n// also doubles as profile view, inlcudes weekly list component\nimport { getCurrentUserTop } from '../components/spotify.js';\n// includes user information from userContext\nimport { UserContext } from '../components/context/userProvider.js';\n\n\nexport default function Profile(){\n    const {\n        user,\n        spotifyUser\n    } = useContext(UserContext)\n\n    // const {\n        \n    // } = useContext(AppContext)\n        const [ view, setView ] = useState('artists')\n        const [ weeklyArtist, setWeeklyArtist ] = useState({})\n        const [ weeklyTracks, setWeeklyTracks ] = useState({})\n    // /pull from mongodb, saved lists\n    const mappedLists = 'first option ternary; if lists? first here if not no lists yet'\n\n\n    // useEffect(() => {\n    //     const fetchUserRecents = async () => {\n    //         const { dataArtist } = await getCurrentUserTop('artists', 3, 'short_term')\n    //         const { dataTracks } = await getCurrentUserTop('tracks', 3, 'short_term')\n    //         setWeeklyArtist(dataArtist)\n    //         setWeeklyTracks(dataTracks)\n    //     }\n    //     fetchUserRecents();\n    // },[])\n\n    return(\n        <div className=\"listprofileview-Container\">\n            {console.log(spotifyUser)}\n            <select>\n                {/* const mappedLists here */}\n                <option> - no lists yet - </option>\n            </select>\n            <br/>\n            <i style={{fontSize: '27px'}} className=\"fab fa-spotify\"/> <h3> Spotify: { spotifyUser ? spotifyUser.display_name : 'error'} </h3>\n            <h3> Username: @{user.username} </h3>\n            <img src={spotifyUser.images[0].url} alt='spotify-user-img' />\n            <div>\n                <h1 style={{color: 'gray'}}> past week top listens (toggle by artist or track) </h1>\n                artists\n                <input type='radio' name='viewType' value='artists' onClick={e => setView(e.target.value)} />\n                tracks\n                <input type='radio' name='viewType'  value='tracks' onClick={e => setView(e.target.value)} />\n                {/* close friends chosen to display on profile, ma */}\n                gang\n                <input type='radio' name='viewType'  value='following' onClick={e => setView(e.target.value)} />\n                <Switch>\n                    <Route\n                        path='/profile/artists'\n                    />\n                    <Route\n                        path='/profile/tracks'\n                    />\n                    <Route\n                        path='/profile/friends'\n                    />\n                </Switch>\n            </div>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}