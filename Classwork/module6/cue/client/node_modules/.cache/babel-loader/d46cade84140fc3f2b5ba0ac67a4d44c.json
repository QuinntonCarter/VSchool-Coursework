{"ast":null,"code":"var _jsxFileName = \"/Users/quinntoncarter/Documents/VSchool/Classwork/module6/cue/client/src/components/context/appContext.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport axios from 'axios';\nimport { accessToken } from '../spotify.js';\nimport { UserContext } from './userProvider.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AppContext = /*#__PURE__*/React.createContext();\nexport default function AppContextProvider(props) {\n  _s();\n\n  const spotifyUserAPI = axios.create();\n  spotifyUserAPI.interceptors.request.use(config => {\n    config.headers.Authorization = `Bearer ${accessToken}`;\n    config.baseURL = 'https://api.spotify.com/v1';\n    return config;\n  });\n  const {\n    userAxios\n  } = useContext(UserContext);\n  const [monthlyArtists, setMonthlyArtists] = useState({});\n  const [monthlyTracks, setMonthlyTracks] = useState({});\n  const [found, setFound] = useState([]); // for analysis of playlist feel **\n\n  const [playlists, setPlaylists] = useState([]);\n  const [playlistTracks, setPlaylistTracks] = useState([]);\n  const [selectedItem, setSelectedItem] = useState({});\n\n  const search = (inputs, type) => {\n    const parseInputs = inputs.split(' ').join('_');\n    userAxios.get(`/app/users`, {\n      params: {\n        inputs: parseInputs,\n        type: type\n      }\n    }).then(res => setFound(res.data)).catch(err => console.log(err));\n  };\n\n  const getSelection = (id, location) => {\n    userAxios.get(`/app/users`, {\n      params: {\n        id: id,\n        type: location\n      }\n    }).then(res => setSelectedItem(res.data)).catch(err => console.log(err));\n  };\n\n  const getCurrentUserTop = async (type, limit, time_range) => {\n    const {\n      data\n    } = await spotifyUserAPI.get(`/me/top/${type}`, {\n      params: {\n        limit: limit,\n        time_range: time_range\n      }\n    });\n    return data;\n  };\n\n  const getUserPlaylists = async id => {\n    const {\n      data\n    } = await spotifyUserAPI.get(`/users/${id}/playlists`, {\n      params: {\n        limit: 50\n      }\n    });\n    return data;\n  }; // for finding overall playlist analysis data; id = playlistId **\n\n\n  function getPlaylistTracks(id) {\n    spotifyUserAPI.get(`/playlists/${id}/tracks`).then(res => console.log(res.data)).catch(err => console.log(err));\n  }\n\n  console.log(playlists);\n  useEffect(() => {\n    getCurrentUserTop('artists', 5, 'short_term').then(res => setMonthlyArtists(res));\n    getCurrentUserTop('tracks', 5, 'short_term').then(res => setMonthlyTracks(res));\n  }, []);\n  useEffect(() => {}, []);\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: {\n      monthlyArtists,\n      monthlyTracks,\n      spotifyUserAPI,\n      search,\n      found,\n      setFound,\n      selectedItem,\n      getSelection,\n      getCurrentUserPlaylists\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AppContextProvider, \"kFDt2xrEb8DG0JHg3jgg/5fpaUE=\");\n\n_c = AppContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AppContextProvider\");","map":{"version":3,"sources":["/Users/quinntoncarter/Documents/VSchool/Classwork/module6/cue/client/src/components/context/appContext.js"],"names":["React","useState","useEffect","useContext","axios","accessToken","UserContext","AppContext","createContext","AppContextProvider","props","spotifyUserAPI","create","interceptors","request","use","config","headers","Authorization","baseURL","userAxios","monthlyArtists","setMonthlyArtists","monthlyTracks","setMonthlyTracks","found","setFound","playlists","setPlaylists","playlistTracks","setPlaylistTracks","selectedItem","setSelectedItem","search","inputs","type","parseInputs","split","join","get","params","then","res","data","catch","err","console","log","getSelection","id","location","getCurrentUserTop","limit","time_range","getUserPlaylists","getPlaylistTracks","getCurrentUserPlaylists","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,SAASC,WAAT,QAA4B,mBAA5B;;AAEA,OAAO,MAAMC,UAAU,gBAAGP,KAAK,CAACQ,aAAN,EAAnB;AAEP,eAAe,SAASC,kBAAT,CAA4BC,KAA5B,EAAkC;AAAA;;AAC7C,QAAMC,cAAc,GAAGP,KAAK,CAACQ,MAAN,EAAvB;AACAD,EAAAA,cAAc,CAACE,YAAf,CAA4BC,OAA5B,CAAoCC,GAApC,CAAwCC,MAAM,IAAI;AAC9CA,IAAAA,MAAM,CAACC,OAAP,CAAeC,aAAf,GAAgC,UAASb,WAAY,EAArD;AACAW,IAAAA,MAAM,CAACG,OAAP,GAAiB,4BAAjB;AACA,WAAOH,MAAP;AACH,GAJD;AAKA,QAAM;AACFI,IAAAA;AADE,MAEFjB,UAAU,CAACG,WAAD,CAFd;AAIA,QAAM,CAAEe,cAAF,EAAkBC,iBAAlB,IAAwCrB,QAAQ,CAAC,EAAD,CAAtD;AACA,QAAM,CAAEsB,aAAF,EAAiBC,gBAAjB,IAAsCvB,QAAQ,CAAC,EAAD,CAApD;AACA,QAAM,CAAEwB,KAAF,EAASC,QAAT,IAAsBzB,QAAQ,CAAC,EAAD,CAApC,CAb6C,CAc7C;;AACA,QAAM,CAAE0B,SAAF,EAAaC,YAAb,IAA8B3B,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAAE4B,cAAF,EAAkBC,iBAAlB,IAAwC7B,QAAQ,CAAC,EAAD,CAAtD;AACA,QAAM,CAAE8B,YAAF,EAAgBC,eAAhB,IAAoC/B,QAAQ,CAAC,EAAD,CAAlD;;AAEA,QAAMgC,MAAM,GAAG,CAACC,MAAD,EAASC,IAAT,KAAkB;AAC7B,UAAMC,WAAW,GAAGF,MAAM,CAACG,KAAP,CAAa,GAAb,EAAkBC,IAAlB,CAAuB,GAAvB,CAApB;AACAlB,IAAAA,SAAS,CAACmB,GAAV,CAAe,YAAf,EAA4B;AACxBC,MAAAA,MAAM,EAAE;AACJN,QAAAA,MAAM,EAAEE,WADJ;AAEJD,QAAAA,IAAI,EAAEA;AAFF;AADgB,KAA5B,EAMCM,IAND,CAMMC,GAAG,IAAIhB,QAAQ,CAACgB,GAAG,CAACC,IAAL,CANrB,EAOCC,KAPD,CAOOC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAPd;AAQH,GAVD;;AAYA,QAAMG,YAAY,GAAG,CAACC,EAAD,EAAKC,QAAL,KAAkB;AACnC9B,IAAAA,SAAS,CAACmB,GAAV,CAAe,YAAf,EAA4B;AACxBC,MAAAA,MAAM,EAAE;AACJS,QAAAA,EAAE,EAAEA,EADA;AAEJd,QAAAA,IAAI,EAAEe;AAFF;AADgB,KAA5B,EAMCT,IAND,CAMMC,GAAG,IAAIV,eAAe,CAACU,GAAG,CAACC,IAAL,CAN5B,EAOCC,KAPD,CAOOC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAPd;AAQH,GATD;;AAWA,QAAMM,iBAAiB,GAAG,OAAOhB,IAAP,EAAaiB,KAAb,EAAoBC,UAApB,KAAmC;AACrD,UAAM;AAAEV,MAAAA;AAAF,QAAW,MAAMhC,cAAc,CAAC4B,GAAf,CAAoB,WAAUJ,IAAK,EAAnC,EAAqC;AAC5DK,MAAAA,MAAM,EAAE;AACJY,QAAAA,KAAK,EAAEA,KADH;AAEJC,QAAAA,UAAU,EAAEA;AAFR;AADoD,KAArC,CAAvB;AAMJ,WAAOV,IAAP;AACC,GARL;;AAUA,QAAMW,gBAAgB,GAAG,MAAOL,EAAP,IAAc;AACnC,UAAM;AAAEN,MAAAA;AAAF,QAAW,MAAMhC,cAAc,CAAC4B,GAAf,CAAoB,UAASU,EAAG,YAAhC,EAA4C;AAC/DT,MAAAA,MAAM,EAAE;AACJY,QAAAA,KAAK,EAAE;AADH;AADuD,KAA5C,CAAvB;AAKA,WAAOT,IAAP;AACH,GAPD,CApD6C,CA6D7C;;;AACA,WAASY,iBAAT,CAA2BN,EAA3B,EAA8B;AAC1BtC,IAAAA,cAAc,CAAC4B,GAAf,CAAoB,cAAaU,EAAG,SAApC,EACCR,IADD,CACMC,GAAG,IAAII,OAAO,CAACC,GAAR,CAAYL,GAAG,CAACC,IAAhB,CADb,EAECC,KAFD,CAEOC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAFd;AAGH;;AACDC,EAAAA,OAAO,CAACC,GAAR,CAAYpB,SAAZ;AAEAzB,EAAAA,SAAS,CAAC,MAAM;AACZiD,IAAAA,iBAAiB,CAAC,SAAD,EAAY,CAAZ,EAAe,YAAf,CAAjB,CACCV,IADD,CACMC,GAAG,IAAIpB,iBAAiB,CAACoB,GAAD,CAD9B;AAEAS,IAAAA,iBAAiB,CAAC,QAAD,EAAW,CAAX,EAAc,YAAd,CAAjB,CACCV,IADD,CACMC,GAAG,IAAIlB,gBAAgB,CAACkB,GAAD,CAD7B;AAEH,GALQ,EAKP,EALO,CAAT;AAOAxC,EAAAA,SAAS,CAAC,MAAM,CAEf,CAFQ,EAEP,EAFO,CAAT;AAIA,sBACI,QAAC,UAAD,CAAY,QAAZ;AACA,IAAA,KAAK,EAAE;AACHmB,MAAAA,cADG;AAEHE,MAAAA,aAFG;AAGHZ,MAAAA,cAHG;AAIHsB,MAAAA,MAJG;AAKHR,MAAAA,KALG;AAMHC,MAAAA,QANG;AAOHK,MAAAA,YAPG;AAQHiB,MAAAA,YARG;AASHQ,MAAAA;AATG,KADP;AAAA,cAYK9C,KAAK,CAAC+C;AAZX;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH;;GAhGuBhD,kB;;KAAAA,kB","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport axios from 'axios';\nimport { accessToken } from '../spotify.js';\nimport { UserContext } from './userProvider.js';\n\nexport const AppContext = React.createContext();\n\nexport default function AppContextProvider(props){\n    const spotifyUserAPI = axios.create();\n    spotifyUserAPI.interceptors.request.use(config => {\n        config.headers.Authorization = `Bearer ${accessToken}`\n        config.baseURL = 'https://api.spotify.com/v1'\n        return config\n    });\n    const {\n        userAxios\n    } = useContext(UserContext)\n\n    const [ monthlyArtists, setMonthlyArtists ] = useState({});\n    const [ monthlyTracks, setMonthlyTracks ] = useState({});\n    const [ found, setFound ] = useState([]);\n    // for analysis of playlist feel **\n    const [ playlists, setPlaylists ] = useState([]);\n    const [ playlistTracks, setPlaylistTracks ] = useState([]);\n    const [ selectedItem, setSelectedItem ] = useState({})\n\n    const search = (inputs, type) => {\n        const parseInputs = inputs.split(' ').join('_')\n        userAxios.get(`/app/users`, {\n            params: {\n                inputs: parseInputs,\n                type: type\n            }\n        })\n        .then(res => setFound(res.data))\n        .catch(err => console.log(err))\n    }\n\n    const getSelection = (id, location) => {\n        userAxios.get(`/app/users`, {\n            params: {\n                id: id,\n                type: location\n            }\n        })\n        .then(res => setSelectedItem(res.data))\n        .catch(err => console.log(err))\n    }\n\n    const getCurrentUserTop = async (type, limit, time_range) => {\n            const { data } = await spotifyUserAPI.get(`/me/top/${type}`,{\n            params: {\n                limit: limit,\n                time_range: time_range\n            }\n        })\n        return data\n        }\n\n    const getUserPlaylists = async (id) => {\n        const { data } = await spotifyUserAPI.get(`/users/${id}/playlists`,{\n            params: {\n                limit: 50\n            }\n        })\n        return data\n    }\n\n    // for finding overall playlist analysis data; id = playlistId **\n    function getPlaylistTracks(id){\n        spotifyUserAPI.get(`/playlists/${id}/tracks`)\n        .then(res => console.log(res.data))\n        .catch(err => console.log(err))\n    }\n    console.log(playlists)\n    \n    useEffect(() => {\n        getCurrentUserTop('artists', 5, 'short_term')\n        .then(res => setMonthlyArtists(res))\n        getCurrentUserTop('tracks', 5, 'short_term')\n        .then(res => setMonthlyTracks(res))\n    },[])\n\n    useEffect(() => {\n        \n    },[])\n\n    return(\n        <AppContext.Provider\n        value={{\n            monthlyArtists,\n            monthlyTracks,\n            spotifyUserAPI,\n            search,\n            found,\n            setFound,\n            selectedItem,\n            getSelection,\n            getCurrentUserPlaylists\n        }}>\n            {props.children}\n        </AppContext.Provider>\n    )\n}"]},"metadata":{},"sourceType":"module"}