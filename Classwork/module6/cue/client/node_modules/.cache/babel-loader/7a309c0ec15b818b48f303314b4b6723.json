{"ast":null,"code":"var _jsxFileName = \"/Users/quinntoncarter/Documents/VSchool/Classwork/module6/cue/client/src/views/lists.js\",\n    _s = $RefreshSig$();\n\nimport { useContext, useEffect } from 'react';\nimport { UserContext } from '../components/context/userProvider.js';\nimport { PostedMood } from '../components/postedMood.js';\nimport { PostedList } from '../components/postedList.js';\nimport { AppContext } from '../components/context/appContext.js'; // friends' posts\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Lists() {\n  _s();\n\n  const {\n    setUserState,\n    userState: {\n      friendPosts\n    },\n    userState: {\n      friendLists\n    },\n    userState\n  } = useContext(UserContext);\n  const {\n    getPosts,\n    getStatus\n  } = useContext(AppContext);\n  const mappedFriendsMoods = friendPosts && friendPosts.map(post => /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"text-sm text-indigo-500\",\n      children: [\" \", post.userString, \"'s mood\", post.timeline === 'short_term' && ` these past 30 days`, post.timeline === 'medium_term' && ` these past 6 months`, post.timeline === 'long_term' && ` the past year`]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(PostedMood, {\n      id: post._id,\n      items: post.items\n    }, post._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true));\n  const mappedFriendLists = friendLists[0] && friendLists.map(list => /*#__PURE__*/_jsxDEV(PostedList, {\n    list: list\n  }, list._id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this));\n  useEffect(() => {\n    getStatus('friends').then(res => setUserState(prevState => ({ ...prevState,\n      friendPosts: res\n    })));\n    getPosts('friends').then(res => setUserState(prevState => ({ ...prevState,\n      friendLists: res\n    })));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-main\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-sm text-indigo-300\",\n        children: [\" \", userState.user.friends.length, \" friend and \", friendPosts.length, \" posted moods \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), friendPosts.length === 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-sm text-cerise-500\",\n        children: \" nothing to display \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 46\n      }, this), mappedFriendsMoods]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pt-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-sm text text-submarine-300\",\n        children: [\" \", userState.user.friends.length, \" friend and \", friendLists.length, \" posted lists \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), friendLists.length === 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-sm text-cerise-500\",\n        children: \" nothing to display \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 46\n      }, this), mappedFriendLists]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Lists, \"5x38DE/aNHVHfqSaL+Jy9vDzsRE=\");\n\n_c = Lists;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"Lists\");","map":{"version":3,"sources":["/Users/quinntoncarter/Documents/VSchool/Classwork/module6/cue/client/src/views/lists.js"],"names":["useContext","useEffect","UserContext","PostedMood","PostedList","AppContext","Lists","setUserState","userState","friendPosts","friendLists","getPosts","getStatus","mappedFriendsMoods","map","post","userString","timeline","_id","items","mappedFriendLists","list","then","res","prevState","user","friends","length"],"mappings":"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","sourcesContent":["import { useContext, useEffect } from 'react';\nimport { UserContext } from '../components/context/userProvider.js';\nimport { PostedMood } from '../components/postedMood.js';\nimport { PostedList } from '../components/postedList.js';\nimport { AppContext } from '../components/context/appContext.js';\n\n// friends' posts\nexport default function Lists(){\n    const {\n        setUserState,\n        userState: {\n            friendPosts\n        },\n        userState: {\n            friendLists\n        },\n        userState\n    } = useContext(UserContext);\n\n    const {\n        getPosts,\n        getStatus\n    } = useContext(AppContext);\n\n    const mappedFriendsMoods = friendPosts && friendPosts.map(post => \n        <>\n            <h3 className='text-sm text-indigo-500'> {post.userString}'s mood\n                {post.timeline === 'short_term' && ` these past 30 days`}\n                {post.timeline === 'medium_term' && ` these past 6 months`}\n                {post.timeline === 'long_term' && ` the past year`} \n            </h3>\n            <PostedMood\n                key={post._id}\n                id={post._id}\n                items={post.items}\n            />\n        </>\n    );\n\n    const mappedFriendLists = friendLists[0] && friendLists.map(list => \n        <PostedList\n            list={list}\n            key={list._id}\n        />\n        );\n\n    useEffect(() => {\n        getStatus('friends')\n        .then(res => setUserState(prevState => ({\n                ...prevState,\n                friendPosts: res\n            }))\n        )\n        getPosts('friends')\n        .then(res => setUserState(prevState => ({\n            ...prevState,\n            friendLists: res\n        })))\n    },[]);\n\n    return(\n        <div className='container-main'>\n            <div>\n            <span className='text-sm text-indigo-300'> {userState.user.friends.length} friend and {friendPosts.length} posted moods </span>\n                <br/>\n                {friendPosts.length === 0 && <span className='text-sm text-cerise-500'> nothing to display </span>}\n                {mappedFriendsMoods}\n            </div>\n            <div className='pt-3'>\n                <span className='text-sm text text-submarine-300'> {userState.user.friends.length} friend and {friendLists.length} posted lists </span>\n                <br/>\n                {friendLists.length === 0 && <span className='text-sm text-cerise-500'> nothing to display </span>}\n                {mappedFriendLists}\n            </div>\n        </div>\n    )\n};"]},"metadata":{},"sourceType":"module"}