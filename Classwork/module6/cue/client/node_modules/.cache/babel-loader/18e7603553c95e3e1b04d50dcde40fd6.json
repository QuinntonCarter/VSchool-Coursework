{"ast":null,"code":"var _jsxFileName = \"/Users/quinntoncarter/Documents/VSchool/Classwork/module6/cue/client/src/components/checkMood.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { AppContext } from './context/appContext';\nimport { UserContext } from './context/userProvider';\nimport { MoodItem } from './moodItem.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const CheckMood = () => {\n  _s();\n\n  const {\n    getCurrentUserTop,\n    getPlaylists,\n    setPlaylists,\n    playlists\n  } = useContext(AppContext);\n  const {\n    spotifyUser: {\n      id\n    }\n  } = useContext(UserContext);\n  const history = useHistory();\n  const [view, setView] = useState(false);\n  const [type, setType] = useState('artists');\n  const [amount, setAmount] = useState(3);\n  const [timeframe, setTimeframe] = useState('short_term');\n  const [mood, setMood] = useState([]);\n  useEffect(() => {\n    getCurrentUserTop(type, amount, timeframe).then(res => {\n      const {\n        items\n      } = res;\n      setMood(items);\n    }).catch(err => console.log(err));\n    getPlaylists(id).then(res => {\n      const {\n        items,\n        total\n      } = res;\n      console.log(items);\n      setPlaylists({\n        items: items,\n        total: total\n      });\n    }).catch(err => console.log(err));\n  }, [type, amount, timeframe]);\n  const mappedMood = mood && mood.map(item => /*#__PURE__*/_jsxDEV(MoodItem, {\n    color: 'indigo',\n    item: item\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 49\n  }, this));\n  const mappedPlaylists = playlists.items && playlists.items.map(item => /*#__PURE__*/_jsxDEV(MoodItem, {\n    color: 'navy',\n    item: item\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 76\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grid\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-3 pt-4 pb-10 bg-indigo-900 text-cyan-800 rounded m-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        onClick: () => history.goBack(),\n        className: \"bg-cerise-700 text-xs text-cyan-50 font-bold btnbold-small\",\n        type: \"button\",\n        value: \"to profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onClick: () => setView(prevState => !prevState),\n        title: \"click to check moods of spotify playlists\",\n        className: \"btn text-sm\",\n        type: \"button\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), !view ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"p-3 text-md text-cocoa-900 grid grid-cols-1 gap-3 pr-6 pl-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"bg-indigo-200 text-center text-indigo-800 text-sm rounded-full\",\n            onChange: e => setAmount(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"3\",\n              children: \" top 3 \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"5\",\n              children: \" top 5 \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"8\",\n              children: \" top 8 \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"10\",\n              children: \" top 10 \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"15\",\n              children: \" top 15 \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"20\",\n              children: \" top 20 \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"25\",\n              children: \" top 25 \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"30\",\n              children: \" top 30 \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"40\",\n              children: \" top 40 \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"50\",\n              children: \" top 50 \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"bg-indigo-200 text-center text-sm text-indigo-800 rounded-full\",\n            onChange: e => setTimeframe(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"short_term\",\n              children: \" monthly \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"medium_term\",\n              children: \" biannual \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"long_term\",\n              children: \" annual \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"bg-indigo-200 text-center text-indigo-800 text-sm rounded-full\",\n            onChange: e => setType(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"artists\",\n              children: \" artists \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"tracks\",\n              children: \" tracks \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"bg-cyan-600 text-indigo-50 font-medium text-md btn\",\n            type: \"button\",\n            title: \"post as your mood\",\n            value: \"mood.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm text-cerise-50\",\n          children: [\" top \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-xl\",\n            children: amount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 60\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-xl\",\n            children: [\" \", type, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 102\n          }, this), timeframe === 'short_term' && ` these past 30 days`, timeframe === 'medium_term' && ' these past 6 months', timeframe === 'long_term' && ' the past year']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \" p-3 rounded\",\n          children: mappedMood || 'the vibe is off. refresh the page.'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-3 text-md text-cocoa-50 grid grid-cols-1 gap-3 pr-6 pl-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm\",\n          children: [\" viewing \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-xl\",\n            children: [\" \", playlists.total, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 49\n          }, this), \" playlists \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 17\n        }, this), mappedPlaylists]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CheckMood, \"BnScaRulGE8m+FiEwHmMWGW6hcw=\", false, function () {\n  return [useHistory];\n});\n\n_c = CheckMood;\n\nvar _c;\n\n$RefreshReg$(_c, \"CheckMood\");","map":{"version":3,"sources":["/Users/quinntoncarter/Documents/VSchool/Classwork/module6/cue/client/src/components/checkMood.js"],"names":["React","useState","useEffect","useContext","useHistory","AppContext","UserContext","MoodItem","CheckMood","getCurrentUserTop","getPlaylists","setPlaylists","playlists","spotifyUser","id","history","view","setView","type","setType","amount","setAmount","timeframe","setTimeframe","mood","setMood","then","res","items","catch","err","console","log","total","mappedMood","map","item","mappedPlaylists","goBack","prevState","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,UAAT,QAA2B,sBAA3B;AACA,SAASC,WAAT,QAA4B,wBAA5B;AACA,SAASC,QAAT,QAAyB,eAAzB;;;AAEA,OAAO,MAAMC,SAAS,GAAG,MAAM;AAAA;;AAC3B,QAAM;AACFC,IAAAA,iBADE;AAEFC,IAAAA,YAFE;AAGFC,IAAAA,YAHE;AAIFC,IAAAA;AAJE,MAKFT,UAAU,CAACE,UAAD,CALd;AAMA,QAAM;AACFQ,IAAAA,WAAW,EAAG;AACVC,MAAAA;AADU;AADZ,MAIFX,UAAU,CAACG,WAAD,CAJd;AAMA,QAAMS,OAAO,GAAGX,UAAU,EAA1B;AAEA,QAAM,CAAEY,IAAF,EAAQC,OAAR,IAAmBhB,QAAQ,CAAC,KAAD,CAAjC;AACA,QAAM,CAAEiB,IAAF,EAAQC,OAAR,IAAoBlB,QAAQ,CAAC,SAAD,CAAlC;AACA,QAAM,CAAEmB,MAAF,EAAUC,SAAV,IAAwBpB,QAAQ,CAAC,CAAD,CAAtC;AACA,QAAM,CAAEqB,SAAF,EAAaC,YAAb,IAA8BtB,QAAQ,CAAC,YAAD,CAA5C;AACA,QAAM,CAAEuB,IAAF,EAAQC,OAAR,IAAoBxB,QAAQ,CAAC,EAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZO,IAAAA,iBAAiB,CAACS,IAAD,EAAOE,MAAP,EAAeE,SAAf,CAAjB,CACCI,IADD,CACMC,GAAG,IAAI;AACT,YAAM;AAAEC,QAAAA;AAAF,UAAYD,GAAlB;AACAF,MAAAA,OAAO,CAACG,KAAD,CAAP;AAAe,KAHnB,EAICC,KAJD,CAIOC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAJd;AAKApB,IAAAA,YAAY,CAACI,EAAD,CAAZ,CACCY,IADD,CACMC,GAAG,IAAI;AACT,YAAM;AAAEC,QAAAA,KAAF;AAASK,QAAAA;AAAT,UAAmBN,GAAzB;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;AACAjB,MAAAA,YAAY,CAAC;AACTiB,QAAAA,KAAK,EAAEA,KADE;AAETK,QAAAA,KAAK,EAAEA;AAFE,OAAD,CAAZ;AAIH,KARD,EASCJ,KATD,CASOC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CATd;AAUH,GAhBQ,EAgBN,CAACZ,IAAD,EAAOE,MAAP,EAAeE,SAAf,CAhBM,CAAT;AAkBA,QAAMY,UAAU,GAAGV,IAAI,IAAIA,IAAI,CAACW,GAAL,CAASC,IAAI,iBAAI,QAAC,QAAD;AAAU,IAAA,KAAK,EAAE,QAAjB;AAA2B,IAAA,IAAI,EAAEA;AAAjC;AAAA;AAAA;AAAA;AAAA,UAAjB,CAA3B;AACA,QAAMC,eAAe,GAAGzB,SAAS,CAACgB,KAAV,IAAmBhB,SAAS,CAACgB,KAAV,CAAgBO,GAAhB,CAAoBC,IAAI,iBAAI,QAAC,QAAD;AAAU,IAAA,KAAK,EAAE,MAAjB;AAAyB,IAAA,IAAI,EAAEA;AAA/B;AAAA;AAAA;AAAA;AAAA,UAA5B,CAA3C;AAGA,sBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,2BACA;AAAK,MAAA,SAAS,EAAC,wDAAf;AAAA,8BACI;AAAO,QAAA,OAAO,EAAE,MAAMrB,OAAO,CAACuB,MAAR,EAAtB;AAAwC,QAAA,SAAS,EAAC,4DAAlD;AAA+G,QAAA,IAAI,EAAC,QAApH;AAA6H,QAAA,KAAK,EAAC;AAAnI;AAAA;AAAA;AAAA;AAAA,cADJ,eAEQ;AAAO,QAAA,OAAO,EAAE,MAAMrB,OAAO,CAACsB,SAAS,IAAI,CAACA,SAAf,CAA7B;AAAwD,QAAA,KAAK,EAAC,2CAA9D;AAA0G,QAAA,SAAS,EAAC,aAApH;AAAkI,QAAA,IAAI,EAAC;AAAvI;AAAA;AAAA;AAAA;AAAA,cAFR,EAGM,CAACvB,IAAD,gBACF;AAAA,gCACI;AAAM,UAAA,SAAS,EAAC,6DAAhB;AAAA,kCACI;AAAQ,YAAA,SAAS,EAAC,gEAAlB;AAAmF,YAAA,QAAQ,EAAEwB,CAAC,IAAInB,SAAS,CAACmB,CAAC,CAACC,MAAF,CAASC,KAAV,CAA3G;AAAA,oCAEI;AAAQ,cAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAGI;AAAQ,cAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHJ,eAII;AAAQ,cAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJJ,eAKI;AAAQ,cAAA,KAAK,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBALJ,eAMI;AAAQ,cAAA,KAAK,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBANJ,eAOI;AAAQ,cAAA,KAAK,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAPJ,eAQI;AAAQ,cAAA,KAAK,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBARJ,eASI;AAAQ,cAAA,KAAK,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBATJ,eAUI;AAAQ,cAAA,KAAK,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAVJ,eAWI;AAAQ,cAAA,KAAK,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAcI;AAAQ,YAAA,SAAS,EAAC,gEAAlB;AAAmF,YAAA,QAAQ,EAAEF,CAAC,IAAIjB,YAAY,CAACiB,CAAC,CAACC,MAAF,CAASC,KAAV,CAA9G;AAAA,oCAEI;AAAQ,cAAA,KAAK,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAGI;AAAQ,cAAA,KAAK,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHJ,eAII;AAAQ,cAAA,KAAK,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAdJ,eAoBI;AAAQ,YAAA,SAAS,EAAC,gEAAlB;AAAmF,YAAA,QAAQ,EAAEF,CAAC,IAAIrB,OAAO,CAACqB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAzG;AAAA,oCAEI;AAAQ,cAAA,KAAK,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAGI;AAAQ,cAAA,KAAK,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBApBJ,eAyBI;AAAO,YAAA,SAAS,EAAC,oDAAjB;AAAsE,YAAA,IAAI,EAAC,QAA3E;AAAoF,YAAA,KAAK,EAAC,mBAA1F;AAA8G,YAAA,KAAK,EAAC;AAApH;AAAA;AAAA;AAAA;AAAA,kBAzBJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eA4BI;AAAG,UAAA,SAAS,EAAC,wBAAb;AAAA,2CAA2C;AAAM,YAAA,SAAS,EAAC,SAAhB;AAAA,sBAA2BtB;AAA3B;AAAA;AAAA;AAAA;AAAA,kBAA3C,oBAAqF;AAAM,YAAA,SAAS,EAAC,SAAhB;AAAA,4BAA4BF,IAA5B;AAAA;AAAA;AAAA;AAAA;AAAA,kBAArF,EACKI,SAAS,KAAK,YAAd,IAA+B,qBADpC,EAEKA,SAAS,KAAK,aAAd,IAA+B,sBAFpC,EAGKA,SAAS,KAAK,WAAd,IAA6B,gBAHlC;AAAA;AAAA;AAAA;AAAA;AAAA,gBA5BJ,eAiCI;AAAK,UAAA,SAAS,EAAC,cAAf;AAAA,oBACCY,UAAU,IAAI;AADf;AAAA;AAAA;AAAA;AAAA,gBAjCJ;AAAA,sBADE,gBAuCF;AAAK,QAAA,SAAS,EAAC,4DAAf;AAAA,gCACI;AAAG,UAAA,SAAS,EAAC,SAAb;AAAA,+CAAgC;AAAM,YAAA,SAAS,EAAC,SAAhB;AAAA,4BAA4BtB,SAAS,CAACqB,KAAtC;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEKI,eAFL;AAAA;AAAA;AAAA;AAAA;AAAA,cA1CJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADJ;AAoDH,CA/FM;;GAAM7B,S;UAaOJ,U;;;KAbPI,S","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { AppContext } from './context/appContext';\nimport { UserContext } from './context/userProvider';\nimport { MoodItem } from './moodItem.js';\n\nexport const CheckMood = () => {\n    const {\n        getCurrentUserTop,\n        getPlaylists,\n        setPlaylists,\n        playlists\n    } = useContext(AppContext);\n    const {\n        spotifyUser : {\n            id\n        }\n    } = useContext(UserContext);\n\n    const history = useHistory()\n\n    const [ view, setView] = useState(false);\n    const [ type, setType ] = useState('artists');\n    const [ amount, setAmount ] = useState(3);\n    const [ timeframe, setTimeframe ] = useState('short_term');\n    const [ mood, setMood ] = useState([]);\n\n    useEffect(() => {\n        getCurrentUserTop(type, amount, timeframe)\n        .then(res => {\n            const { items } = res\n            setMood(items)})\n        .catch(err => console.log(err))\n        getPlaylists(id)\n        .then(res => {\n            const { items, total } = res\n            console.log(items)\n            setPlaylists({\n                items: items,\n                total: total\n            })\n        })\n        .catch(err => console.log(err))\n    }, [type, amount, timeframe]);\n\n    const mappedMood = mood && mood.map(item => <MoodItem color={'indigo'} item={item}/>);\n    const mappedPlaylists = playlists.items && playlists.items.map(item => <MoodItem color={'navy'} item={item} />);\n\n\n    return(\n        <div className='grid'>\n        <div className='p-3 pt-4 pb-10 bg-indigo-900 text-cyan-800 rounded m-6'>\n            <input onClick={() => history.goBack()} className='bg-cerise-700 text-xs text-cyan-50 font-bold btnbold-small' type='button' value='to profile'/>\n                <input onClick={() => setView(prevState => !prevState)} title='click to check moods of spotify playlists' className='btn text-sm' type='button'/>\n            { !view ?\n            <>\n                <form className='p-3 text-md text-cocoa-900 grid grid-cols-1 gap-3 pr-6 pl-6'>\n                    <select className='bg-indigo-200 text-center text-indigo-800 text-sm rounded-full' onChange={e => setAmount(e.target.value)}>\n                        {/* <option> - amount - </option> */}\n                        <option value='3' > top 3 </option>\n                        <option value='5'> top 5 </option>\n                        <option value='8'> top 8 </option>\n                        <option value='10'> top 10 </option>\n                        <option value='15'> top 15 </option>\n                        <option value='20'> top 20 </option>\n                        <option value='25'> top 25 </option>\n                        <option value='30'> top 30 </option>\n                        <option value='40'> top 40 </option>\n                        <option value='50'> top 50 </option>\n                    </select>\n                    <select className='bg-indigo-200 text-center text-sm text-indigo-800 rounded-full' onChange={e => setTimeframe(e.target.value)}>\n                        {/* <option> - timeframe - </option> */}\n                        <option value='short_term' > monthly </option>\n                        <option value='medium_term' > biannual </option>\n                        <option value='long_term'> annual </option>\n                    </select>\n                    <select className='bg-indigo-200 text-center text-indigo-800 text-sm rounded-full' onChange={e => setType(e.target.value)}>\n                        {/* <option> - type - </option> */}\n                        <option value='artists' > artists </option>\n                        <option value='tracks'> tracks </option>\n                    </select>\n                    <input className='bg-cyan-600 text-indigo-50 font-medium text-md btn' type='button' title='post as your mood' value='mood.'/>\n                </form>\n                <p className='text-sm text-cerise-50'> top <span className='text-xl'>{amount}</span> <span className='text-xl'> {type} </span> \n                    {timeframe === 'short_term' && ` these past 30 days`} \n                    {timeframe === 'medium_term' && ' these past 6 months'}\n                    {timeframe === 'long_term' && ' the past year'} \n                </p>\n                <div className=' p-3 rounded'>\n                {mappedMood || 'the vibe is off. refresh the page.'}\n                </div>\n            </>\n            :\n            <div className='p-3 text-md text-cocoa-50 grid grid-cols-1 gap-3 pr-6 pl-6'>\n                <p className='text-sm'> viewing <span className='text-xl'> {playlists.total} </span> playlists </p>\n                {mappedPlaylists}\n            </div>\n            }\n        </div>\n        </div>\n    )\n};"]},"metadata":{},"sourceType":"module"}