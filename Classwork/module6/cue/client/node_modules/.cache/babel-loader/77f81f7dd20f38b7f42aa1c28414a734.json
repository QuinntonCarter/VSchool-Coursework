{"ast":null,"code":"var _jsxFileName = \"/Users/quinntoncarter/Documents/VSchool/Classwork/module6/cue/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useContext, useState, useEffect } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport 'react-spotify-auth/dist/index.css';\nimport { accessToken, getCurrentUserProfile } from './components/spotify.js';\nimport { UserContext } from './components/context/userProvider.js';\nimport ProtectedRoute from './components/protectedRoute.js';\nimport Banner from './components/banner.js';\nimport Auth from './Auth.js';\nimport Main from './views/main.js';\nimport Navbar from './components/navbar.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // const { token } = useContext(UserContext)\n  const [spotifyToken, setSpotifyToken] = useState(null);\n  const [profile, setProfile] = useState(null);\n  useEffect(() => {\n    if (accessToken) {\n      setSpotifyToken(accessToken);\n\n      const fetchData = async () => {\n        try {\n          const {\n            data\n          } = await getCurrentUserProfile();\n          setProfile(data);\n        } catch (e) {\n          console.error(e);\n        }\n      };\n\n      fetchData();\n    } else if (!accessToken) {\n      return;\n    }\n  }, [spotifyToken]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mainContainer\",\n    children: accessToken ? /*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 23\n    }, this) : null\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"ndQEG04EDyWxKjn8vX8pwL8BQY8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/quinntoncarter/Documents/VSchool/Classwork/module6/cue/client/src/App.js"],"names":["useContext","useState","useEffect","Switch","Route","accessToken","getCurrentUserProfile","UserContext","ProtectedRoute","Banner","Auth","Main","Navbar","App","spotifyToken","setSpotifyToken","profile","setProfile","fetchData","data","e","console","error"],"mappings":";;;AAAA,SAASA,UAAT,EAAqBC,QAArB,EAA+BC,SAA/B,QAAgD,OAAhD;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,kBAA9B;AAEA,OAAO,mCAAP;AACA,SAASC,WAAT,EAAsBC,qBAAtB,QAAmD,yBAAnD;AACA,SAASC,WAAT,QAA4B,sCAA5B;AACA,OAAOC,cAAP,MAA2B,gCAA3B;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,IAAP,MAAiB,iBAAjB;AAEA,OAAOC,MAAP,MAAmB,wBAAnB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb;AACA,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCd,QAAQ,CAAC,IAAD,CAAhD;AACA,QAAM,CAACe,OAAD,EAAUC,UAAV,IAAwBhB,QAAQ,CAAC,IAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAK;AACb,QAAGG,WAAH,EAAe;AACbU,MAAAA,eAAe,CAACV,WAAD,CAAf;;AAEA,YAAMa,SAAS,GAAG,YAAY;AAC5B,YAAI;AACF,gBAAM;AAACC,YAAAA;AAAD,cAAS,MAAMb,qBAAqB,EAA1C;AACAW,UAAAA,UAAU,CAACE,IAAD,CAAV;AACD,SAHD,CAGE,OAAMC,CAAN,EAAS;AACTC,UAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd;AAED;AACF,OARD;;AASAF,MAAAA,SAAS;AACZ,KAbC,MAaK,IAAI,CAACb,WAAL,EAAkB;AACvB;AACD;AACA,GAjBQ,EAiBN,CAACS,YAAD,CAjBM,CAAT;AAmBA,sBACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,cA2BIT,WAAW,gBAAG,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAAH,GAAgB;AA3B/B;AAAA;AAAA;AAAA;AAAA,UADF;AA+BD;;GAvDQQ,G;;KAAAA,G;AAyDT,eAAeA,GAAf","sourcesContent":["import { useContext, useState, useEffect } from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport 'react-spotify-auth/dist/index.css';\nimport { accessToken, getCurrentUserProfile } from './components/spotify.js';\nimport { UserContext } from './components/context/userProvider.js';\nimport ProtectedRoute from './components/protectedRoute.js';\nimport Banner from './components/banner.js';\nimport Auth from './Auth.js';\nimport Main from './views/main.js';\n\nimport Navbar from './components/navbar.js';\n\nfunction App() {\n  // const { token } = useContext(UserContext)\n  const [spotifyToken, setSpotifyToken] = useState(null);\n  const [profile, setProfile] = useState(null);\n\n  useEffect(()=> {\n    if(accessToken){\n      setSpotifyToken(accessToken);\n\n      const fetchData = async () => {\n        try {\n          const {data} = await getCurrentUserProfile();\n          setProfile(data);\n        } catch(e) {\n          console.error(e);\n\n        }\n      }\n      fetchData();\n  } else if (!accessToken) {\n    return;\n  }\n  }, [spotifyToken])\n\n  return (\n    <div className='mainContainer'>\n\n      \n    {/* <Banner/>\n      <Switch>\n        <Route\n          exact path='/'\n          render={() => <Auth/>}\n        />\n\n        <ProtectedRoute\n          exact path='/main'\n          redirectTo='/'\n          // token={token}\n          component={Main}\n          loading={false}\n        />\n\n        <ProtectedRoute\n          path='/main/:view'\n          redirectTo='/'\n          // token={token}\n          spotifyToken={accessToken}\n          loading={false}\n        />\n\n      </Switch> */}\n      { accessToken ? <Navbar /> : null }\n    </div>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}