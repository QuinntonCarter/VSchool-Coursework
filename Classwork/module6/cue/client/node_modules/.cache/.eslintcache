[{"/Users/quinntoncarter/Documents/VSchool/Classwork/module6/cue/client/src/index.js":"1","/Users/quinntoncarter/Documents/VSchool/Classwork/module6/cue/client/src/App.js":"2","/Users/quinntoncarter/Documents/VSchool/Classwork/module6/cue/client/src/components/navbar.js":"3","/Users/quinntoncarter/Documents/VSchool/Classwork/module6/cue/client/src/components/protectedRoute.js":"4","/Users/quinntoncarter/Documents/VSchool/Classwork/module6/cue/client/src/components/banner.js":"5","/Users/quinntoncarter/Documents/VSchool/Classwork/module6/cue/client/src/components/resultComp.js":"6","/Users/quinntoncarter/Documents/VSchool/Classwork/module6/cue/client/src/components/forms/searchBar.js":"7","/Users/quinntoncarter/Documents/VSchool/Classwork/module6/cue/client/src/components/context/appContext.js":"8","/Users/quinntoncarter/Documents/VSchool/Classwork/module6/cue/client/src/components/context/userProvider.js":"9","/Users/quinntoncarter/Documents/VSchool/Classwork/module6/cue/client/src/Auth.js":"10","/Users/quinntoncarter/Documents/VSchool/Classwork/module6/cue/client/src/components/spotify.js":"11","/Users/quinntoncarter/Documents/VSchool/Classwork/module6/cue/client/src/components/forms/authForm.js":"12","/Users/quinntoncarter/Documents/VSchool/Classwork/module6/cue/client/src/views/profile.js":"13","/Users/quinntoncarter/Documents/VSchool/Classwork/module6/cue/client/src/views/search.js":"14","/Users/quinntoncarter/Documents/VSchool/Classwork/module6/cue/client/src/views/lists.js":"15","/Users/quinntoncarter/Documents/VSchool/Classwork/module6/cue/client/src/components/recentTracks.js":"16","/Users/quinntoncarter/Documents/VSchool/Classwork/module6/cue/client/src/components/recentArtists.js":"17","/Users/quinntoncarter/Documents/VSchool/Classwork/module6/cue/client/src/components/checkMood.js":"18","/Users/quinntoncarter/Documents/VSchool/Classwork/module6/cue/client/src/components/moodItem.js":"19","/Users/quinntoncarter/Documents/VSchool/Classwork/module6/cue/client/src/components/resultDetails.js":"20","/Users/quinntoncarter/Documents/VSchool/Classwork/module6/cue/client/src/components/userProfile.js":"21","/Users/quinntoncarter/Documents/VSchool/Classwork/module6/cue/client/src/components/resultsProfile.js":"22","/Users/quinntoncarter/Documents/VSchool/Classwork/module6/cue/client/src/components/postedMood.js":"23"},{"size":498,"mtime":1636580250629,"results":"24","hashOfConfig":"25"},{"size":2353,"mtime":1639629592096,"results":"26","hashOfConfig":"25"},{"size":1043,"mtime":1639523087157,"results":"27","hashOfConfig":"25"},{"size":285,"mtime":1635816739969,"results":"28","hashOfConfig":"25"},{"size":1713,"mtime":1639426386514,"results":"29","hashOfConfig":"25"},{"size":640,"mtime":1639376717324,"results":"30","hashOfConfig":"25"},{"size":822,"mtime":1639954118313,"results":"31","hashOfConfig":"25"},{"size":5375,"mtime":1639954130415,"results":"32","hashOfConfig":"25"},{"size":7596,"mtime":1639952802161,"results":"33","hashOfConfig":"25"},{"size":3525,"mtime":1639692854288,"results":"34","hashOfConfig":"25"},{"size":4742,"mtime":1638995421851,"results":"35","hashOfConfig":"25"},{"size":770,"mtime":1639426278628,"results":"36","hashOfConfig":"25"},{"size":2270,"mtime":1639950039245,"results":"37","hashOfConfig":"25"},{"size":306,"mtime":1639376611457,"results":"38","hashOfConfig":"25"},{"size":896,"mtime":1639955085762,"results":"39","hashOfConfig":"25"},{"size":455,"mtime":1639074748468,"results":"40","hashOfConfig":"25"},{"size":502,"mtime":1639556383692,"results":"41","hashOfConfig":"25"},{"size":6062,"mtime":1639665348511,"results":"42","hashOfConfig":"25"},{"size":2984,"mtime":1639632061201,"results":"43","hashOfConfig":"25"},{"size":716,"mtime":1639344939767,"results":"44","hashOfConfig":"25"},{"size":1282,"mtime":1639953480147,"results":"45","hashOfConfig":"25"},{"size":1838,"mtime":1639665431108,"results":"46","hashOfConfig":"25"},{"size":365,"mtime":1639955133465,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"495h6e",{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"50"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"50"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"50"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/quinntoncarter/Documents/VSchool/Classwork/module6/cue/client/src/index.js",[],["98","99"],"/Users/quinntoncarter/Documents/VSchool/Classwork/module6/cue/client/src/App.js",[],"/Users/quinntoncarter/Documents/VSchool/Classwork/module6/cue/client/src/components/navbar.js",[],"/Users/quinntoncarter/Documents/VSchool/Classwork/module6/cue/client/src/components/protectedRoute.js",[],"/Users/quinntoncarter/Documents/VSchool/Classwork/module6/cue/client/src/components/banner.js",[],"/Users/quinntoncarter/Documents/VSchool/Classwork/module6/cue/client/src/components/resultComp.js",[],"/Users/quinntoncarter/Documents/VSchool/Classwork/module6/cue/client/src/components/forms/searchBar.js",[],"/Users/quinntoncarter/Documents/VSchool/Classwork/module6/cue/client/src/components/context/appContext.js",["100"],"/Users/quinntoncarter/Documents/VSchool/Classwork/module6/cue/client/src/components/context/userProvider.js",[],"/Users/quinntoncarter/Documents/VSchool/Classwork/module6/cue/client/src/Auth.js",[],"/Users/quinntoncarter/Documents/VSchool/Classwork/module6/cue/client/src/components/spotify.js",[],"/Users/quinntoncarter/Documents/VSchool/Classwork/module6/cue/client/src/components/forms/authForm.js",[],"/Users/quinntoncarter/Documents/VSchool/Classwork/module6/cue/client/src/views/profile.js",["101"],"/Users/quinntoncarter/Documents/VSchool/Classwork/module6/cue/client/src/views/search.js",[],"/Users/quinntoncarter/Documents/VSchool/Classwork/module6/cue/client/src/views/lists.js",["102","103"],"/Users/quinntoncarter/Documents/VSchool/Classwork/module6/cue/client/src/components/recentTracks.js",[],"/Users/quinntoncarter/Documents/VSchool/Classwork/module6/cue/client/src/components/recentArtists.js",[],"/Users/quinntoncarter/Documents/VSchool/Classwork/module6/cue/client/src/components/checkMood.js",["104"],"import React, { useState, useEffect, useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { AppContext } from './context/appContext';\nimport { UserContext } from './context/userProvider';\nimport { MoodItem } from './moodItem.js';\n\nexport const CheckMood = () => {\n    const {\n        getCurrentUserTop,\n        getPlaylists,\n        setPlaylists,\n        playlists,\n        found,\n        setFound\n    } = useContext(AppContext);\n    const {\n        shareItem,\n        spotifyUser : {\n            id\n        }\n    } = useContext(UserContext);\n    \n    const history = useHistory();\n\n    const [ view, setView] = useState(false);\n    const [ type, setType ] = useState('artists');\n    const [ amount, setAmount ] = useState(3);\n    const [ timeframe, setTimeframe ] = useState('short_term');\n    const [ mood, setMood ] = useState([]);\n\n    useEffect(() => {\n        // gets top on load\n        getCurrentUserTop(type, amount, timeframe)\n        .then(res => {\n            const { items } = res\n            setMood(items)\n            // pulls only needed metadata from JSON object\n            const forDB = items.map(item => {\n                let selectionParsed\n                if(item.type === 'artist'){\n                    // no test label here..?\n                return {\n                    selectionName: item.name,\n                    genres: item.genres ? item.genres.map(genre => genre) : null,\n                    image: item.images[0] ? item.images[0].url : null,\n                    href: item.external_urls.spotify,\n                    type: item.type\n                }\n                } else if(item.type === 'track'){\n                    // no test label here..?\n                    return {\n                        selectionName: item.album.name,\n                        artists: item.artists.map(artist => artist.name),\n                        image: item.album.images[0] ? item.album.images[0].url : null,\n                        href: item.external_urls.spotify,\n                        type: item.type\n                    }\n                }\n                return selectionParsed\n            })\n        // setFound to the items w only needed data\n            setFound(forDB)\n        })\n        .catch(err => console.log(err))\n        getPlaylists(id)\n        .then(res => {\n            setPlaylists({\n                items: res,\n                total: res.length\n            })\n        })\n        .catch(err => console.log(err))\n        // cleanup function\n        return () => {\n            setMood('')\n        }\n    }, [type, amount, timeframe]);\n\n    const mappedMood = mood && mood.map(item => <MoodItem color={'indigo'} item={item} key={item.id} setFound={setFound}/>);\n    const mappedPlaylists = playlists && playlists.items.map(item => <MoodItem color={'indigo'} item={item} key={item.id}/>);\n\n    return(\n        <div className='grid container-main'>\n        <div className='p-3 pt-4 bg-indigo-800 text-cyan-800 rounded'>\n            <input onClick={() => history.goBack()} className='bg-cerise-700 text-xs text-cyan-50 font-bold btnbold-small' type='button' value='to profile'/>\n            <input onClick={() => setView(prevState => !prevState)} value={`view ${view ? `recent` : `playlists`}`} title='click to check moods of spotify playlists' className='btn text-sm' type='button'/>\n            { !view ?\n            <>\n                <form className='p-3 text-md text-cocoa-900 grid grid-cols-1 gap-3 pr-6 pl-6'>\n                    <select className='bg-indigo-200 text-center text-indigo-800 text-sm rounded-full' onChange={e => setAmount(e.target.value)}>\n                        <option value='3' > top 3 </option>\n                        <option value='5'> top 5 </option>\n                        <option value='8'> top 8 </option>\n                        <option value='10'> top 10 </option>\n                        <option value='15'> top 15 </option>\n                        <option value='20'> top 20 </option>\n                        <option value='25'> top 25 </option>\n                        <option value='30'> top 30 </option>\n                        <option value='40'> top 40 </option>\n                        <option value='50'> top 50 </option>\n                    </select>\n                    <select className='bg-indigo-200 text-center text-sm text-indigo-800 rounded-full' onChange={e => setTimeframe(e.target.value)}>\n                        <option value='short_term' > monthly </option>\n                        <option value='medium_term' > biannual </option>\n                        <option value='long_term'> annual </option>\n                    </select>\n                    <select className='bg-indigo-200 text-center text-indigo-800 text-sm rounded-full' onChange={e => setType(e.target.value)}>\n                        <option value='artists' > artists </option>\n                        <option value='tracks'> tracks </option>\n                    </select>\n                    <input onClick={() => shareItem(found)} className='bg-indigo-600 text-indigo-50 font-medium text-md btn' type='button' title='post as your mood' value='post mood.'/>\n                </form>\n                <p className='text-sm text-cerise-50'> top <span className='text-xl'>{amount}</span> <span className='text-xl'> {type} </span> \n                    {timeframe === 'short_term' && ` these past 30 days`} \n                    {timeframe === 'medium_term' && ' these past 6 months'}\n                    {timeframe === 'long_term' && ' the past year'} \n                </p>\n                <div className=' p-3 rounded'>\n                    {mappedMood || 'the vibe is off. refresh the page.'}\n                </div>\n            </>\n            :\n            // playlist view\n            <div className='p-3 text-md text-cocoa-50 grid grid-cols-1 gap-3 pr-6 pl-6'>\n                <p className='text-sm'> viewing <span className='text-xl'> {playlists.total} </span> playlists </p>\n                {mappedPlaylists}\n            </div>\n            }\n        </div>\n        </div>\n    )\n};","/Users/quinntoncarter/Documents/VSchool/Classwork/module6/cue/client/src/components/moodItem.js",["105"],"import { useContext, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { AppContext } from './context/appContext';\n\nexport const MoodItem = props => {\n    const {\n        item,\n        color\n    } = props\n\n    const {\n        getPlaylistTracks,\n        setFound\n    } = useContext(AppContext);\n\n    let selectionParsed\n    \n    // lost on every render warning, but it's intentional\n    useEffect(() => {\n        if(item.type === 'playlist'){\n            selectionParsed = {\n                    name: item.name,\n                    description: item.description ? item.description : null,\n                    owner: item.owner.display_name,\n                    ownerProfile: item.owner.external_urls.spotify,\n                    image: item.images[0] ? item.images[0].url : null,\n                    type: item.type,\n                    href: item.external_urls.spotify,\n                    spotifyId: item.id\n            }\n        }\n    }, []);\n\n    return item.owner ?\n    // for playlist tracks view\n        <div onClick={() => setFound(selectionParsed)} className={`rounded text-xs mb-2 bg-${color}-500 text-cyan-50 p-1`}>\n            <Link to={`/results/${item.id}`}>\n                <span onClick={() => getPlaylistTracks(item.id)}>\n                    { item.images[0].url && <img src={item.images[0].url} alt='playlist'/> }\n                    <p className={`text-cyan-50 text-lg bg-${color}-700 p-1 rounded`}> {item.name} </p>\n                </span>\n            </Link>\n            <div className='p-3' style={{backgroundColor: 'black'}}> \n                <p className='text-xs'> curated by </p>\n                {` ${item.owner.display_name}`}\n                <br/>\n                <a href={`https://open.spotify.com/playlist/${item.id}`}> \n                    <span className='p-3' style={{backgroundColor: 'black'}}>\n                        <span className='font-sans font-medium text-md pr-1'> Listen in Spotify </span>\n                        <i className='fab fa-spotify pt-4' style={{color: '#1DB954', fontSize: '34px'}}/>\n                    </span>\n                </a>\n            </div>\n        </div>\n    :\n    // for reusability w other views\n        <div className={`list-item list-decimal list-inside rounded text-xs mb-2 bg-${color}-500 text-cyan-50 font-semibold text-left p-1`}>\n            {item.images?.[0] && <img src={item.images[0].url} alt='playlist'/>}\n            {item.album && <img src={item.album.images[0].url || `no image available` } alt='playlist'/> }\n            <p className={`text-cyan-50 text-lg text-center font-normal `}> {item.artists && item.artists.map(artist => `${artist.name} -`)} <span className='text-cerise-400'> {item.name} </span> </p>\n            { item.album && <p className={`text-xs rounded p-1  text-cyan-50`}> From '{item.album.name}'</p> }\n            <p className={`text-xs text-center font-normal text-cerise-100`}> {item.genres && item.genres.map(genre => `${genre} `)} </p>\n        </div>\n};","/Users/quinntoncarter/Documents/VSchool/Classwork/module6/cue/client/src/components/resultDetails.js",[],"/Users/quinntoncarter/Documents/VSchool/Classwork/module6/cue/client/src/components/userProfile.js",[],"/Users/quinntoncarter/Documents/VSchool/Classwork/module6/cue/client/src/components/resultsProfile.js",["106"],"import { useContext, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { AppContext } from './context/appContext.js';\nimport { UserContext} from './context/userProvider.js';\n\nexport const ResultsProfile = () => {\n    const {\n        playlistTracks,\n        setFound,\n        found\n    } = useContext(AppContext);\n    const {\n        shareItem\n    } = useContext(UserContext);\n\n    let history = useHistory();\n\n    useEffect(() => {\n        setFound(found)\n        // cleanup function\n        return () => {\n            setFound('')\n        }\n    }, []);\n\n    const mappedTracks = playlistTracks.items && playlistTracks.items.map(item =>\n            <p className='list-item list-decimal list-inside text-cerise-200' key={item.id}> {item.track.name} <span className='text-cerise-50 text-xs'> <br/> from {item.track.album.name}  </span> </p>\n        );\n        return(\n            <div className='p-3 pt-4 pr-6 pl-6 mb-20 bg-indigo-900 rounded text-center'>\n            <button onClick={() => history.goBack()} className='btnbold-small bg-cerise-700 text-sm'> go back </button>\n            <img src={found.image} alt='playlist'/>\n            <div className='container-main text-left p-3 rounded' style={{backgroundColor: 'black'}}>\n                <a className='text-3xl p-3 rounded' href={`https://open.spotify.com/playlist/${found.spotifyId}`}> {found.name}\n                <br/>\n                <span className='text-sm'>click here to listen via <span className='font-sans'> Spotify </span></span>\n                <i className='fab fa-spotify pl-1' style={{color: '#1DB954', fontSize: '34px'}}/>\n                </a>\n                {mappedTracks}\n                <button className='btn bg-indigo-800 mt-7' onClick={() => shareItem(found)}> share playlist </button>\n            </div>\n        </div>\n    )\n};","/Users/quinntoncarter/Documents/VSchool/Classwork/module6/cue/client/src/components/postedMood.js",[],{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","severity":1,"message":"112","line":124,"column":8,"nodeType":"113","endLine":124,"endColumn":10,"suggestions":"114"},{"ruleId":"111","severity":1,"message":"115","line":19,"column":7,"nodeType":"113","endLine":19,"endColumn":9,"suggestions":"116"},{"ruleId":"117","severity":1,"message":"118","line":2,"column":10,"nodeType":"119","messageId":"120","endLine":2,"endColumn":20},{"ruleId":"111","severity":1,"message":"121","line":18,"column":7,"nodeType":"113","endLine":18,"endColumn":9,"suggestions":"122"},{"ruleId":"111","severity":1,"message":"123","line":77,"column":8,"nodeType":"113","endLine":77,"endColumn":33,"suggestions":"124"},{"ruleId":"111","severity":1,"message":"125","line":21,"column":31,"nodeType":"126","endLine":30,"endColumn":14},{"ruleId":"111","severity":1,"message":"127","line":24,"column":8,"nodeType":"113","endLine":24,"endColumn":10,"suggestions":"128"},"no-native-reassign",["129"],"no-negated-in-lhs",["130"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getCurrentUserTop'. Either include it or remove the dependency array.","ArrayExpression",["131"],"React Hook useEffect has missing dependencies: 'getStatus' and 'history'. Either include them or remove the dependency array.",["132"],"no-unused-vars","'AppContext' is defined but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'getStatus'. Either include it or remove the dependency array.",["133"],"React Hook useEffect has missing dependencies: 'getCurrentUserTop', 'getPlaylists', 'id', 'setFound', and 'setPlaylists'. Either include them or remove the dependency array.",["134"],"Assignments to the 'selectionParsed' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","ObjectExpression","React Hook useEffect has missing dependencies: 'found' and 'setFound'. Either include them or remove the dependency array.",["135"],"no-global-assign","no-unsafe-negation",{"desc":"136","fix":"137"},{"desc":"138","fix":"139"},{"desc":"140","fix":"141"},{"desc":"142","fix":"143"},{"desc":"144","fix":"145"},"Update the dependencies array to be: [getCurrentUserTop]",{"range":"146","text":"147"},"Update the dependencies array to be: [getStatus, history]",{"range":"148","text":"149"},"Update the dependencies array to be: [getStatus]",{"range":"150","text":"151"},"Update the dependencies array to be: [type, amount, timeframe, getCurrentUserTop, getPlaylists, id, setFound, setPlaylists]",{"range":"152","text":"153"},"Update the dependencies array to be: [found, setFound]",{"range":"154","text":"155"},[4803,4805],"[getCurrentUserTop]",[623,625],"[getStatus, history]",[493,495],"[getStatus]",[2570,2595],"[type, amount, timeframe, getCurrentUserTop, getPlaylists, id, setFound, setPlaylists]",[579,581],"[found, setFound]"]